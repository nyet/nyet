# C:\CPANTesters\Perl5.12.4\bin\perl.exe -d:Trace "-MExtUtils::Command::MM" "-e" "test_harness(1, 'blib\lib', 'blib\arch')" t/02parse-191.t  2>&1| tee -a 02parse-191.test.log

>> -e:1: test_harness(1, 'blib\lib', 'blib\arch')
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:50:     require Test::Harness;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:5: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:5: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:5: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:7: use constant IS_WIN32 => ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:2: use 5.005;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:2: use 5.005;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:2: use 5.005;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:4: use warnings::register;
>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:3: our $VERSION = '1.01';

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:24: require warnings;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:51: 1;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:4: use warnings::register;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:4: use warnings::register;
>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:37:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:38:     my $package = (caller(0))[0];

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:39:     if (! defined $warnings::Bits{$package}) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:40:         $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:41:         vec($warnings::Bits{'all'}, $warnings::LAST_BIT, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:42:         $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:43: 	foreach my $k (keys %warnings::Bits) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:46:         $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:47:         vec($warnings::DeadBits{'all'}, $warnings::LAST_BIT++, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:6: use vars qw($VERSION %declared);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:3: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:3: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:3: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:7: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:7: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:7: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:37:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:38:     my $package = (caller(0))[0];

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:39:     if (! defined $warnings::Bits{$package}) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:40:         $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:41:         vec($warnings::Bits{'all'}, $warnings::LAST_BIT, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:42:         $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:43: 	foreach my $k (keys %warnings::Bits) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:46:         $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:47:         vec($warnings::DeadBits{'all'}, $warnings::LAST_BIT++, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:8: use strict qw(vars subs);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:8: use strict qw(vars subs);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:8: use strict qw(vars subs);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:5: our $VERSION = '1.01';

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:46: 1;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:6: use vars qw($VERSION %declared);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:6: use vars qw($VERSION %declared);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:29:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:29:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:29:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:30:     my $const = $] > 5.009002;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:31:     *_CAN_PCS = sub () {$const};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:52: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:52: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:52: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:7: $VERSION = '1.21';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:12: my %keywords = map +($_, 1), qw{ BEGIN INIT CHECK END DESTROY AUTOLOAD };
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:13: $keywords{UNITCHECK}++ if $] > 5.009;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:15: my %forced_into_main = map +($_, 1),
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:18: my %forbidden = (%keywords, %forced_into_main);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:20: my $str_end = $] >= 5.006 ? "\\z" : "\\Z";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:21: my $normal_constant_name = qr/^_?[^\W_0-9]\w*$str_end/;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:22: my $tolerable = qr/^[A-Za-z_]\w*$str_end/;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:23: my $boolean = qr/^[01]?$str_end/;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:151: 1;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:7: use constant IS_WIN32 => ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:7: use constant IS_WIN32 => ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:8: use constant IS_VMS => ( $^O eq 'VMS' );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:8: use constant IS_VMS => ( $^O eq 'VMS' );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:8: use constant IS_VMS => ( $^O eq 'VMS' );
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:10: use TAP::Harness                     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:4: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:4: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:4: use Carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:6: use File::Spec;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:4: use vars qw(@ISA $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:4: use vars qw(@ISA $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:4: use vars qw(@ISA $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:6: $VERSION = '3.33';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:7: $VERSION = eval $VERSION;
>> (eval 1)[C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:7]:1: 3.33
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:9: my %module = (MacOS   => 'Mac',
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:20: my $module = $module{$^O} || 'Unix';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:22: require "File/Spec/$module.pm";
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:5: use vars qw(@ISA $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:5: use vars qw(@ISA $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:5: use vars qw(@ISA $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:6: require File::Spec::Unix;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:149: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:149: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:149: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:6: $VERSION = '3.33';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:7: $VERSION = eval $VERSION;
>> (eval 2)[C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:7]:1: 3.33
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:143: my $tmpdir;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Unix.pm:521: 1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:8: $VERSION = '3.33';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:9: $VERSION = eval $VERSION;
>> (eval 3)[C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:9]:1: 3.33
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:11: @ISA = qw(File::Spec::Unix);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:14: my $DRIVE_RX = '[a-zA-Z]:';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:15: my $UNC_RX = '(?:\\\\\\\\|//)[^\\\\/]+[\\\\/][^\\\\/]+';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:16: my $VOL_RX = "(?:$DRIVE_RX|$UNC_RX)";
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:70: my $tmpdir;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:444: 1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:23: @ISA = ("File::Spec::$module");
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec.pm:25: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:6: use File::Spec;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:6: use File::Spec;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:7: use File::Path;
>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:3: use 5.005_04;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:3: use 5.005_04;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:3: use 5.005_04;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:4: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:4: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:4: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:6: use Cwd 'getcwd';

>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:170: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:170: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:170: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:171: use Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:171: use Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:171: use Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:172: use vars qw(@ISA @EXPORT @EXPORT_OK $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:172: use vars qw(@ISA @EXPORT @EXPORT_OK $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:172: use vars qw(@ISA @EXPORT @EXPORT_OK $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:210:     if ($^O eq 'VMS') {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:811:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:811:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:811:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:174: $VERSION = '3.33';
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:175: my $xs_version = $VERSION;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:176: $VERSION = eval $VERSION;
>> (eval 4)[C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:176]:1: 3.33
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:178: @ISA = qw/ Exporter /;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:179: @EXPORT = qw(cwd getcwd fastcwd fastgetcwd);
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:180: push @EXPORT, qw(getdcwd) if $^O eq 'MSWin32';
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:181: @EXPORT_OK = qw(chdir abs_path fast_abs_path realpath fast_realpath);
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:189: if ($^O eq 'os2') {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:208: my $use_vms_feature;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:245: eval {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:246:   if ( $] >= 5.006 ) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:247:     require XSLoader;
>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:5: $VERSION = "0.15";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:16: boot_DynaLoader('DynaLoader') if defined(&boot_DynaLoader) &&

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:103: 1;

>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:248:     XSLoader::load( __PACKAGE__, $xs_version);
>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:23:     my ($module, $modlibname) = caller();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:25:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:26:         $module = $_[0];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:32:     my $boots = "$module\::bootstrap";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:33:     goto &$boots if defined &$boots;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:35:     goto \&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:37:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:38:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:40:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:41:     my $c = @modparts;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:42:     $modlibname =~ s,[\\/][^\\/]+$,, while $c--;    # Q&D basename

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:43:     my $file = "$modlibname/auto/$modpname/$modfname.dll";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:47:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:48:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:50:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:56:     goto \&XSLoader::bootstrap_inherit if not -f $file or -s $bs;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:58:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:59:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:60:     @DynaLoader::dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:62:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:71:     my $libref = dl_load_file($file, 0) or do { 

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:75:     push(@DynaLoader::dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:77:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:78:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:83:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:88:     push(@DynaLoader::dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:90:   boot:

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:94:     push(@DynaLoader::dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:95:     return &$xs(@_);

>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:257: $VERSION = eval $VERSION;
>> (eval 5)[C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:257]:1: 3.33
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:260: my %METHOD_MAP =
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:330: $METHOD_MAP{NT} = $METHOD_MAP{MSWin32};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:336: my $pwd_cmd;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:337: foreach my $try ('/bin/pwd',
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:342:     if( -x $try ) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:342:     if( -x $try ) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:342:     if( -x $try ) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:347: my $found_pwd_cmd = defined($pwd_cmd);
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:348: unless ($pwd_cmd) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:352:     $pwd_cmd = 'pwd';
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:376: unless ($METHOD_MAP{$^O}{cwd} or defined &cwd) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:401: if ($^O eq 'cygwin') {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:412: *fastgetcwd = \&cwd;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:466: if (not defined &fastcwd) { *fastcwd = \&fastcwd_ }
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:474: my $chdir_init = 0;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:620: my $Curdir;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:669: *fast_realpath = \&fast_abs_path;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:761: *_NT_cwd = defined &Win32::GetCwd ? \&_win32_cwd : \&_os2_cwd;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:807: if (exists $METHOD_MAP{$^O}) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:808:   my $map = $METHOD_MAP{$^O};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:809:   foreach my $name (keys %$map) {
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:810:     local $^W = 0;  # assignments trigger 'subroutine redefined' warning
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:810:     local $^W = 0;  # assignments trigger 'subroutine redefined' warning
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:810:     local $^W = 0;  # assignments trigger 'subroutine redefined' warning
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:810:     local $^W = 0;  # assignments trigger 'subroutine redefined' warning
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:810:     local $^W = 0;  # assignments trigger 'subroutine redefined' warning
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:810:     local $^W = 0;  # assignments trigger 'subroutine redefined' warning
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:812:     *{$name} = \&{$map->{$name}};
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:817: *abs_path = \&_perl_abs_path unless defined &abs_path;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:818: *getcwd = \&_perl_getcwd unless defined &getcwd;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:822: *realpath = \&abs_path;
>> C:/CPANTesters/Perl5.12.4/lib/Cwd.pm:824: 1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:6: use Cwd 'getcwd';

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:6: use Cwd 'getcwd';

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:7: use File::Basename ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:43:   if (${^TAINT}) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:50: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:50: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:50: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:51: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:51: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:51: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:52: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:52: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:52: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:369:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:371:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:372:     my $fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:373:     my $no_fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:375:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:377:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:382:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:384:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:385: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:394: 	    $mask |= $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:395: 	    $mask |= $DeadBits{$word} if $fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:396: 	    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:402:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:373: my @Ignore_Case = qw(MacOS VMS AmigaOS OS2 RISCOS MSWin32 MSDOS DOS Epoc);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:374: my @Types = (@Ignore_Case, qw(Unix));

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:53: our(@ISA, @EXPORT, $VERSION, $Fileparse_fstype, $Fileparse_igncase);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:54: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:55: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:56: @EXPORT = qw(fileparse fileparse_set_fstype basename dirname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:57: $VERSION = "2.78";

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:59: fileparse_set_fstype($^O);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:377:     my $old = $Fileparse_fstype;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:379:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:380:         my $new_type = shift;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:382:         $Fileparse_fstype = 'Unix';  # default

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:383:         foreach my $type (@Types) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:384:             $Fileparse_fstype = $type if $new_type =~ /^$type/i;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:388:           (grep $Fileparse_fstype eq $_, @Ignore_Case) ? 1 : 0;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:391:     return $old;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:397: 1;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:7: use File::Basename ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:7: use File::Basename ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:8: use File::Spec     ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:8: use File::Spec     ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:8: use File::Spec     ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:11:     if ($] < 5.006) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:18: use Exporter ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:18: use Exporter ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:18: use Exporter ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:19: use vars qw($VERSION @ISA @EXPORT @EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:19: use vars qw($VERSION @ISA @EXPORT @EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:19: use vars qw($VERSION @ISA @EXPORT @EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:329:                 no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:329:                 no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:329:                 no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:20: $VERSION   = '2.08_01';

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:21: @ISA       = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:22: @EXPORT    = qw(mkpath rmtree);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:23: @EXPORT_OK = qw(make_path remove_tree);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:25: my $Is_VMS     = $^O eq 'VMS';

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:26: my $Is_MacOS   = $^O eq 'MacOS';

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:30: my $Force_Writeable = grep {$^O eq $_} qw(amigaos dos epoc MSWin32 MacOS os2);

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:34: my $Need_Stat_Check = !($^O eq 'MSWin32');

>> C:/CPANTesters/Perl5.12.4/lib/File/Path.pm:449: 1;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:7: use File::Path;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:7: use File::Path;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:8: use IO::Handle;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:260: use 5.006_001;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:260: use 5.006_001;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:260: use 5.006_001;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:261: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:261: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:261: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:263: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:263: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:263: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:264: use Symbol;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:81: BEGIN { require 5.005; }

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:83: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:84: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:85: @EXPORT = qw(gensym ungensym qualify qualify_to_ref);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:86: @EXPORT_OK = qw(delete_package geniosym);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:88: $VERSION = '1.07';

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:90: my $genpkg = "Symbol::";

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:91: my $genseq = 0;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:93: my %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:170: 1;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:264: use Symbol;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:264: use Symbol;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:265: use SelectSaver;

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:38: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:38: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:38: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:39: use Symbol;

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:39: use Symbol;

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:39: use Symbol;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:3: our $VERSION = '1.02';

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:37: require 5.000;

>> C:/CPANTesters/Perl5.12.4/lib/SelectSaver.pm:54: 1;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:265: use SelectSaver;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:265: use SelectSaver;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:266: use IO ();	# Load the XS module

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:5: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:5: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:5: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:6: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:6: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:6: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:7: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:7: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:7: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:8: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:8: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:8: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:369:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:371:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:372:     my $fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:373:     my $no_fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:375:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:377:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:382:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:384:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:385: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:394: 	    $mask |= $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:395: 	    $mask |= $DeadBits{$word} if $fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:396: 	    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:402:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:10: our $VERSION = "1.25_02";

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:11: XSLoader::load 'IO', $VERSION;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:23:     my ($module, $modlibname) = caller();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:25:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:26:         $module = $_[0];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:32:     my $boots = "$module\::bootstrap";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:33:     goto &$boots if defined &$boots;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:35:     goto \&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:37:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:38:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:40:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:41:     my $c = @modparts;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:42:     $modlibname =~ s,[\\/][^\\/]+$,, while $c--;    # Q&D basename

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:43:     my $file = "$modlibname/auto/$modpname/$modfname.dll";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:47:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:48:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:50:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:56:     goto \&XSLoader::bootstrap_inherit if not -f $file or -s $bs;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:58:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:59:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:60:     @DynaLoader::dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:62:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:71:     my $libref = dl_load_file($file, 0) or do { 

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:75:     push(@DynaLoader::dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:77:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:78:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:83:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:88:     push(@DynaLoader::dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:90:   boot:

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:94:     push(@DynaLoader::dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:95:     return &$xs(@_);

>> C:/CPANTesters/Perl5.12.4/lib/IO.pm:25: 1;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:266: use IO ();	# Load the XS module

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:266: use IO ();	# Load the XS module

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:613:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:613:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:613:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:262: our($VERSION, @EXPORT_OK, @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:268: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:269: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:271: $VERSION = "1.28";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:272: $VERSION = eval $VERSION;

>> (eval 6)[C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:272]:1: 1.28
>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:274: @EXPORT_OK = qw(

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:428: *gets = \&getline;  # deprecated

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:635: 1;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:8: use IO::Handle;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:8: use IO::Handle;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:10: use TAP::Base;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:6: use TAP::Object;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:148:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:148:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:148:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:16: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:157: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:6: use TAP::Object;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:6: use TAP::Object;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:26: };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:26: };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:23: use constant GOT_TIME_HIRES => do {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:24:     eval 'use Time::HiRes qw(time);';
>> (eval 7)[C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:24]:1: use Time::HiRes qw(time);>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:3: { use 5.006; }
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:3: { use 5.006; }
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:3: { use 5.006; }
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:4: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:4: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:4: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:43: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:43: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:43: 	no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:3: { use 5.006; }
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:6: require Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:7: require DynaLoader;
>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:19:     $VERSION = '1.10';

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:20:     $XS_VERSION = '1.10';

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:26: use Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:9: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:9: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:9: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:35:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:35:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:35:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:12: @Config::EXPORT = qw(%Config);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:13: @Config::EXPORT_OK = qw(myconfig config_sh config_vars config_re);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:23: my %Export_Cache = map {($_ => 1)} (@Config::EXPORT, @Config::EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:23: my %Export_Cache = map {($_ => 1)} (@Config::EXPORT, @Config::EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:23: my %Export_Cache = map {($_ => 1)} (@Config::EXPORT, @Config::EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:23: my %Export_Cache = map {($_ => 1)} (@Config::EXPORT, @Config::EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:23: my %Export_Cache = map {($_ => 1)} (@Config::EXPORT, @Config::EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:23: my %Export_Cache = map {($_ => 1)} (@Config::EXPORT, @Config::EXPORT_OK);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:25: our %Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:47: die "Perl lib version (5.12.4) doesn't match executable version ($])"

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:50: $^V eq 5.12.4

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:85: tie %Config, 'Config', {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:64:     bless $_[1], $_[0];

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:26: use Config;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:26: use Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:29:     my $pkg = shift;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:30:     @_ = @Config::EXPORT unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:32:     my @funcs = grep $_ ne '%Config', @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:33:     my $export_Config = @funcs < @_ ? 1 : 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:36:     my $callpkg = caller(0);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:37:     foreach my $func (@funcs) {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:44:     return;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:23: require AutoLoader;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:4: use 5.006_001;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:4: use 5.006_001;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:4: use 5.006_001;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:14:     $is_dosish = $^O eq 'dos' || $^O eq 'os2' || $^O eq 'MSWin32' || $^O eq 'NetWare';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:15:     $is_epoc = $^O eq 'epoc';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:16:     $is_vms = $^O eq 'VMS';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:17:     $is_macos = $^O eq 'MacOS';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:18:     $VERSION = '5.72';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:30: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:30: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:30: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:138: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:138: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:138: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:186:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:186:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:186:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:6: our($VERSION, $AUTOLOAD);
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:8: my $is_dosish;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:9: my $is_epoc;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:10: my $is_vms;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:11: my $is_macos;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:195: 1;
>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:24: *AUTOLOAD = \&AutoLoader::AUTOLOAD;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:29: $dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:44: ($dl_dlext, $dl_so, $dlsrc) = @Config::Config{qw(dlext so dlsrc)};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:47: $do_expand = 0;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:51: @dl_require_symbols = ();       # names of symbols we need

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:52: @dl_resolve_using   = ();       # names of files to link with

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:53: @dl_library_path    = ();       # path to look for files

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:61: @dl_resolve_using = dl_findfile('-lc') if $dlsrc eq "dl_dld.xs";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:66: push(@dl_library_path, split(' ', $Config::Config{libpth}));

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:61:     return $self->fetch_string($key);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:70:     my $config_heavy = 'Config_heavy.pl';

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:71:     if (defined &ActivePerl::_CONFIG_HEAVY) {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:74:     require $config_heavy;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:5: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:5: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:5: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:10:     unless ($ENV{ACTIVEPERL_CONFIG_DISABLE}) {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:11:          eval {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:12:              require ActivePerl::Config;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:40: use Config ();

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:40: use Config ();

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:40: use Config ();

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:4: my %OVERRIDE;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:9: my %COMPILER_ENV = map { $_ => 1 } qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:38: my $compiler_env_initialized;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:41: my $CONFIG_OBJ = tied %Config::Config;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:328: my $console;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:362: my $dmake_not_on_path;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:394: my $already_tried_to_install_mingw;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:395: my @module_builders = qw(

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:457: 1;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:14:          die $@ if $@ && $@ !~ /^Can't locate ActivePerl\/Config\.pm/;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:58: our $summary = <<'!END!';

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:91: my $summary_expanded;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:112: local *_ = \my $a;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:113: $_ = <<'!END!';

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1196: my $i = 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1197: foreach my $c (4,3,2) { $i |= ord($c); $i <<= 8 }

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1198: $i |= ord(1);

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1199: our $byteorder = join('', unpack('aaaa', pack('L!', $i)));

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1200: s/(byteorder=)(['"]).*?\2/$1$2$Config::byteorder$2/m;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1202: my $config_sh_len = length $_;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1204: our $Config_SH_expanded = "\n$_" . << 'EOVIRTUAL';

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1210: eval {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1212: 	require 'Config_git.pl';

>> C:/CPANTesters/Perl5.12.4/lib/Config_git.pl:5: $Config::Git_Data=<<'ENDOFGIT';

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1213: 	$Config_SH_expanded .= $Config::Git_Data;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1214: 	1;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1265: my $prevpos = 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1291: *DELETE = \&STORE;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1292: *CLEAR  = \&STORE;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1334: 1;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:75:     goto \&launcher unless $Config::AUTOLOAD =~ /launcher$/;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1330:     undef &AUTOLOAD;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1331:     goto \&$Config::AUTOLOAD;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1219:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1221:     my $value;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1222:     $value = _fetch_string(@_)

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:44:     return 0 if $ENV{ACTIVEPERL_CONFIG_DISABLE};

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:47: 	local *_;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:47: 	local *_;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:48: 	require ActiveState::Path;

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:7: use Exporter ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:7: use Exporter ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:7: use Exporter ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:11: use constant IS_WIN32 => $^O eq "MSWin32";

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:11: use constant IS_WIN32 => $^O eq "MSWin32";

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:11: use constant IS_WIN32 => $^O eq "MSWin32";

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:12: use File::Basename qw(dirname basename);

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:12: use File::Basename qw(dirname basename);

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:12: use File::Basename qw(dirname basename);

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:13: use Cwd ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:13: use Cwd ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:13: use Cwd ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:14: use Carp ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:14: use Carp ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:14: use Carp ();

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:5: our $VERSION = '1.01';

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:8: our @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:9: our @EXPORT_OK = qw(path_list find_prog is_abs_path abs_path join_path rel_path unsymlinked realpath);

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:16: my $ABS_PATH_RE = IS_WIN32 ? qr,^(?:[a-zA-Z]:)?[\\/], : qr,^/,;

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:17: my $PATH_SEP_RE = IS_WIN32 ? qr,[\\/], : qr,/,;

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:18: my $PATH_SEP    = IS_WIN32 ? "\\" : "/";

>> C:/CPANTesters/Perl5.12.4/lib/ActiveState/Path.pm:185: 1;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:51:     my $key = shift;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:53:     if (exists $ENV{"ACTIVEPERL_CONFIG_\U$key"}) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:58:     if (exists $OVERRIDE{$key}) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:63:     if ($key eq "make" && $^O eq "MSWin32") {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:87:     if ($key eq "make" && ($^O eq "solaris" || $^O eq "hpux")) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:94:     if ($COMPILER_ENV{$key} && !$compiler_env_initialized++) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:304:     return 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1229:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1231:     my $quote_type = "'";

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1232:     my $marker = "$key=";

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1235:     my $start = index($Config_SH_expanded, "\n$marker$quote_type");

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1237:     if ($start == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1243:     return undef if $start == -1;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1245:     $start += length($key) + 3;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1247:     my $value = substr($Config_SH_expanded, $start,

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1255:     if ($quote_type eq '"') {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1261:     $value = undef if $value eq 'undef';

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1262:     return $value;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1225:     return $self->{$key} = $value; # cache it

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:69: my $ldlibpthname         = $Config::Config{ldlibpthname};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:70: my $ldlibpthname_defined = defined $Config::Config{ldlibpthname};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:71: my $pthsep               = $Config::Config{path_sep};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:76: if ($ldlibpthname_defined &&

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:83: if ($ldlibpthname_defined &&

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:92: boot_DynaLoader('DynaLoader') if defined(&boot_DynaLoader) &&

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:95: if ($dl_debug) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:101: 1; # End of main code

>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:9: our @ISA = qw(Exporter DynaLoader);
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:11: our @EXPORT = qw( );
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:12: our @EXPORT_OK = qw (usleep sleep ualarm alarm gettimeofday time tv_interval
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:26: our $VERSION = '1.9725';
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:27: our $XS_VERSION = $VERSION;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:28: $VERSION = eval $VERSION;
>> (eval 8)[C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:28]:1: 1.9725
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:30: our $AUTOLOAD;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:66: bootstrap Time::HiRes;
>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:119:     local(@args) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:120:     local($module) = $args[0];

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:121:     local(@dirs, $file);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:123:     unless ($module) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:130:     croak("Can't load module $module, dynamic loading not available in this perl.\n".

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:137:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:138:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:143:     $modfname = &mod2fname(\@modparts) if defined &mod2fname;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:147:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:149:     print STDERR "DynaLoader::bootstrap for $module ",

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:153:     foreach (@INC) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:156: 	    my $dir = "$_/auto/$modpname";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:159: 	next unless -d $dir; # skip over uninteresting directories

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:162: 	my $try =  "$dir/$modfname.$dl_dlext";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:163: 	last if $file = ($do_expand) ? dl_expandspec($try) : ((-f $try) && $try);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:169:     $file = dl_findfile(map("-L$_",@dirs,@INC), $modfname) unless $file;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:171:     croak("Can't locate loadable object for module $module in \@INC (\@INC contains: @INC)")

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:175:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:176:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:177:     @dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:182:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:183:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:184:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:190:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:201:     my $libref = dl_load_file($file, $module->dl_load_flags) or

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:42: sub dl_load_flags { 0x00 }

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:204:     push(@dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:206:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:207:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:212:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:215:     push(@dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:217:   boot:

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:222: 	push(@dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:224:     &$xs(@args);

>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:79: 1;
>> (eval 7)[C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:24]:1: use Time::HiRes qw(time);>> (eval 7)[C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:24]:1: use Time::HiRes qw(time);>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:50:     my $this = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:51:     for my $i (@_) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:52: 	if (($i eq 'clock_getres'    && !&d_clock_getres)    ||
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:63:     Time::HiRes->export_to_level(1, $this, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:4: no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:4: no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:4: no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:197: 	no warnings 'once';
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:197: 	no warnings 'once';
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:197: 	no warnings 'once';
>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:407:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:409:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:410:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:412:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:417:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:419:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:420: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:424: 	    $mask &= ~($catmask | $DeadBits{$word} | $All);

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:430:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:7: require Exporter;  our $VERSION = $Exporter::VERSION;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:7: require Exporter;  our $VERSION = $Exporter::VERSION;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:248: 1;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:210:       my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:211:       my $level = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:212:       (undef) = shift;			# XXX redundant arg
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:213:       my $callpkg = caller($level);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:214:       $pkg->export($callpkg, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:52:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:58:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:60:     my($pkg, $callpkg, @imports) = @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:61:     my($type, $sym, $cache_is_current, $oops);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:65:     if (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:66: 	if (!%$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:67: 	    _rebuild_cache ($pkg, $exports, $export_cache);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:29:     my ($pkg, $exports, $cache) = @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:30:     s/^&// foreach @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:30:     s/^&// foreach @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:31:     @{$cache}{@$exports} = (1) x @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:31:     @{$cache}{@$exports} = (1) x @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:32:     my $ok = \@{"${pkg}::EXPORT_OK"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:32:     my $ok = \@{"${pkg}::EXPORT_OK"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:33:     if (@$ok) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:34: 	s/^&// foreach @$ok;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:34: 	s/^&// foreach @$ok;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:35: 	@{$cache}{@$ok} = (1) x @$ok;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:35: 	@{$cache}{@$ok} = (1) x @$ok;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:68: 	    $cache_is_current = 1;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:71: 	if (grep m{^[/!:]}, @imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:116:         my @carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:117: 	foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:118: 	    if (!$export_cache->{$sym}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:152: 	if ($oops) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:164:     if (@$fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:189:     warn "Importing into $callpkg from $pkg: ",
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:192:     foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:25:     $@ ? 0 : 1;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:8: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:21: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:129: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:10: use TAP::Base;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:10: use TAP::Base;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:12: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:12: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:12: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:93:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:93:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:93:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:121:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:121:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:121:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:62:     @FORMATTER_ARGS = qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:90:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:92:     for my $method ( sort keys %VALIDATION_FOR ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:109:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:95:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:109:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:95:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:94:         if ( $method eq 'lib' || $method eq 'switches' ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:116:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:112:             *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:120:     for my $method (@FORMATTER_ARGS) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:125:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:122:         *{$method} = sub {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:14: @ISA = qw(TAP::Base);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:26: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:28: $ENV{HARNESS_ACTIVE}  = 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:29: $ENV{HARNESS_VERSION} = $VERSION;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:51: my %VALIDATION_FOR;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:52: my @FORMATTER_ARGS;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:366:     my @legal_callback = qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:366:     my @legal_callback = qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:374:     my %default_class = (
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:849: 1;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:10: use TAP::Harness                     ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:10: use TAP::Harness                     ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:11: use TAP::Parser::Aggregator          ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:4: use Benchmark;
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:426: sub _doeval { no strict;  eval shift }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:426: sub _doeval { no strict;  eval shift }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:426: sub _doeval { no strict;  eval shift }

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:432: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:432: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:432: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:433: use Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:433: use Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:433: use Exporter;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:454:     if (eval 'require Time::HiRes') {

>> (eval 9)[C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:454]:2: ;>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:455: 	import Time::HiRes qw(time);

>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:50:     my $this = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:51:     for my $i (@_) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:52: 	if (($i eq 'clock_getres'    && !&d_clock_getres)    ||
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:63:     Time::HiRes->export_to_level(1, $this, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:210:       my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:211:       my $level = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:212:       (undef) = shift;			# XXX redundant arg
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:213:       my $callpkg = caller($level);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:214:       $pkg->export($callpkg, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:52:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:58:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:60:     my($pkg, $callpkg, @imports) = @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:61:     my($type, $sym, $cache_is_current, $oops);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:65:     if (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:66: 	if (!%$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:71: 	if (grep m{^[/!:]}, @imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:116:         my @carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:117: 	foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:118: 	    if (!$export_cache->{$sym}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:152: 	if ($oops) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:164:     if (@$fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:189:     warn "Importing into $callpkg from $pkg: ",
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:192:     foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:456: 	$hirestime = \&Time::HiRes::time;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:435: our(@ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS, $VERSION);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:437: @ISA=qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:438: @EXPORT=qw(timeit timethis timethese timediff timestr);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:439: @EXPORT_OK=qw(timesum cmpthese countit

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:441: %EXPORT_TAGS=( all => [ @EXPORT, @EXPORT_OK ] ) ;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:443: $VERSION = 1.11;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:447: my $hirestime;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:451: init();

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:474:     $Debug = 0;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:475:     $Min_Count = 4;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:476:     $Min_CPU   = 0.4;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:477:     $Default_Format = '5.2f';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:478:     $Default_Style = 'auto';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:482:     disablecache();

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:529:     die usage if @_;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:530:     $Do_Cache = 0; 

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:483:     clearallcache();

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:511:     die usage if @_;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:512:     %Cache = (); 

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:470: our($Debug, $Min_Count, $Min_CPU, $Default_Format, $Default_Style,

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:497: $_Usage{clearcache} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:506: $_Usage{clearallcache} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:515: $_Usage{enablecache} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:524: $_Usage{disablecache} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:547: $_Usage{timediff} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:565: $_Usage{timesum} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:582: $_Usage{timestr} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:624: $_Usage{runloop} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:670: $_Usage{timeit} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:705: my $default_for = 3;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:706: my $min_for     = 0.1;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:709: $_Usage{countit} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:807: $_Usage{timethis} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:847: $_Usage{timethese} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:884: $_Usage{cmpthese} = <<'USAGE';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:1044: 1;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:4: use Benchmark;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:4: use Benchmark;
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:461:     my $class = shift;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:462:     if (grep { $_ eq ":hireswallclock" } @_) {

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:467:     Benchmark->export_to_level(1, $class, @_);

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:210:       my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:211:       my $level = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:212:       (undef) = shift;			# XXX redundant arg
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:213:       my $callpkg = caller($level);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:214:       $pkg->export($callpkg, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:52:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:58:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:60:     my($pkg, $callpkg, @imports) = @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:61:     my($type, $sym, $cache_is_current, $oops);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:65:     if (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:158: 	@imports = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:164:     if (@$fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:189:     warn "Importing into $callpkg from $pkg: ",
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:192:     foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:7: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:7: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:7: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:79:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:79:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:79:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:63:     %SUMMARY_METHOD_FOR = map { $_ => $_ } qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:74:     $SUMMARY_METHOD_FOR{total}   = 'tests_run';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:75:     $SUMMARY_METHOD_FOR{planned} = 'tests_planned';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:77:     for my $method ( keys %SUMMARY_METHOD_FOR ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:78:         next if 'total' eq $method;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:85:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:9: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:21: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:60: my %SUMMARY_METHOD_FOR;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:416: 1;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:11: use TAP::Parser::Aggregator          ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:11: use TAP::Parser::Aggregator          ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:12: use TAP::Parser::Source              ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:7: use File::Basename qw( fileparse );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:7: use File::Basename qw( fileparse );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:7: use File::Basename qw( fileparse );
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:9: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:21: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:323:     my %shebang_for;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:323:     my %shebang_for;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:370: 1;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:12: use TAP::Parser::Source              ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:12: use TAP::Parser::Source              ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:13: use TAP::Parser::SourceHandler::Perl ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:4: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:4: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:4: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:29:     my $pkg = shift;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:30:     @_ = @Config::EXPORT unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:32:     my @funcs = grep $_ ne '%Config', @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:33:     my $export_Config = @funcs < @_ ? 1 : 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:36:     my $callpkg = caller(0);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:37:     foreach my $func (@funcs) {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:44:     return;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:7: use constant IS_WIN32 => ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:7: use constant IS_WIN32 => ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:7: use constant IS_WIN32 => ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:8: use constant IS_VMS => ( $^O eq 'VMS' );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:8: use constant IS_VMS => ( $^O eq 'VMS' );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:8: use constant IS_VMS => ( $^O eq 'VMS' );
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:10: use TAP::Parser::SourceHandler::Executable ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:6: use TAP::Parser::SourceHandler     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:6: use TAP::Object           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:6: use TAP::Object           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:6: use TAP::Object           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:7: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:8: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:20: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:143: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:7: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:7: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:9: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:21: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler.pm:96: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:6: use TAP::Parser::SourceHandler     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:6: use TAP::Parser::SourceHandler     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:7: use TAP::Parser::IteratorFactory   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:8: use Carp qw( confess );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:8: use Carp qw( confess );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:8: use Carp qw( confess );
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:9: use File::Basename qw( fileparse );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:9: use File::Basename qw( fileparse );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:9: use File::Basename qw( fileparse );
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:13: use constant handlers => [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:13: use constant handlers => [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:13: use constant handlers => [];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:11: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:25: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:287: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:7: use TAP::Parser::IteratorFactory   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:7: use TAP::Parser::IteratorFactory   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:8: use TAP::Parser::Iterator::Process ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:7: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:7: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:7: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:29:     my $pkg = shift;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:30:     @_ = @Config::EXPORT unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:32:     my @funcs = grep $_ ne '%Config', @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:33:     my $export_Config = @funcs < @_ ? 1 : 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:36:     my $callpkg = caller(0);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:37:     foreach my $func (@funcs) {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:44:     return;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:8: use IO::Handle;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:8: use IO::Handle;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:8: use IO::Handle;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:144:             no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:144:             no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:144:             no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:10: @ISA = 'TAP::Parser::Iterator';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:12: my $IS_WIN32 = ( $^O =~ /^(MS)?Win32$/ );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:24: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:82:     local $^W;    # no warnings
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:82:     local $^W;    # no warnings
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:84:     local $SIG{__DIE__} = undef;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:85:     eval { require POSIX; &POSIX::WEXITSTATUS(0) };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:85:     eval { require POSIX; &POSIX::WEXITSTATUS(0) };
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:2: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:2: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:2: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:3: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:3: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:3: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:369:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:371:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:372:     my $fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:373:     my $no_fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:375:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:377:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:382:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:384:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:385: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:394: 	    $mask |= $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:395: 	    $mask |= $DeadBits{$word} if $fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:396: 	    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:402:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:9: use AutoLoader;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:9: use AutoLoader;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:9: use AutoLoader;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:129:     my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:130:     my $callpkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:136:     if ($pkg eq 'AutoLoader') {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:137: 	if ( @_ and $_[0] =~ /^&?AUTOLOAD$/ ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:155:     (my $calldir = $callpkg) =~ s#::#/#g;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:156:     my $path = $INC{$calldir . '.pm'};
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:157:     if (defined($path)) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:161: 	my $replaced_okay;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:162: 	if ($is_macos) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:166: 	    $replaced_okay = ($path =~ s#^(.*)$calldir\.pm\z#$1auto/$calldir/autosplit.ix#);
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:169: 	eval { require $path; } if $replaced_okay;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:169: 	eval { require $path; } if $replaced_okay;
>> C:/CPANTesters/Perl5.12.4/lib/auto/POSIX/autosplit.ix:173: 1;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:171: 	if (!$replaced_okay or $@) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:175: 	if ($@) {
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:11: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:11: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:11: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:19: 	     S_IWGRP S_IWOTH S_IWUSR S_IXGRP S_IXOTH S_IXUSR);

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:58: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:58: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:58: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:62: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:62: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:62: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:65:   $VERSION = "1.06";

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:215:   XSLoader::load 'Fcntl', $VERSION;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:23:     my ($module, $modlibname) = caller();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:25:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:26:         $module = $_[0];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:32:     my $boots = "$module\::bootstrap";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:33:     goto &$boots if defined &$boots;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:35:     goto \&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:37:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:38:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:40:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:41:     my $c = @modparts;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:42:     $modlibname =~ s,[\\/][^\\/]+$,, while $c--;    # Q&D basename

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:43:     my $file = "$modlibname/auto/$modpname/$modfname.dll";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:47:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:48:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:50:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:56:     goto \&XSLoader::bootstrap_inherit if not -f $file or -s $bs;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:58:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:59:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:60:     @DynaLoader::dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:62:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:71:     my $libref = dl_load_file($file, 0) or do { 

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:75:     push(@DynaLoader::dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:77:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:78:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:83:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:88:     push(@DynaLoader::dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:90:   boot:

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:94:     push(@DynaLoader::dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:95:     return &$xs(@_);

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:239:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:239:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:239:     no strict 'refs';

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:59: our($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS, $AUTOLOAD);

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:61: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:63: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:70: @EXPORT =

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:143: @EXPORT_OK = qw(

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:194: %EXPORT_TAGS = (

>> C:/CPANTesters/Perl5.12.4/lib/Fcntl.pm:244: 1;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:19: 	     S_IWGRP S_IWOTH S_IWUSR S_IXGRP S_IXOTH S_IXUSR);

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:13: use Fcntl qw(FD_CLOEXEC F_DUPFD F_GETFD F_GETFL F_GETLK F_RDLCK F_SETFD

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:39:     no strict;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:39:     no strict;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:39:     no strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:40:     no warnings 'uninitialized';

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:40:     no warnings 'uninitialized';

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:40:     no warnings 'uninitialized';

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:407:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:409:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:410:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:412:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:413:         $mask |= $Bits{'all'} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:414:         $mask |= $DeadBits{'all'} if vec($mask, $Offsets{'all'}+1, 1);

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:417:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:419:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:420: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:424: 	    $mask &= ~($catmask | $DeadBits{$word} | $All);

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:430:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:58: use AutoLoader 'AUTOLOAD';

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:58: use AutoLoader 'AUTOLOAD';

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:58: use AutoLoader 'AUTOLOAD';

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:129:     my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:130:     my $callpkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:136:     if ($pkg eq 'AutoLoader') {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:137: 	if ( @_ and $_[0] =~ /^&?AUTOLOAD$/ ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:139: 	    *{ $callpkg . '::AUTOLOAD' } = \&AUTOLOAD;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:139: 	    *{ $callpkg . '::AUTOLOAD' } = \&AUTOLOAD;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:155:     (my $calldir = $callpkg) =~ s#::#/#g;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:156:     my $path = $INC{$calldir . '.pm'};
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:157:     if (defined($path)) {
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:62: use AutoLoader 'AUTOLOAD';

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:62: use AutoLoader 'AUTOLOAD';

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:62: use AutoLoader 'AUTOLOAD';

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:129:     my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:130:     my $callpkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:136:     if ($pkg eq 'AutoLoader') {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:137: 	if ( @_ and $_[0] =~ /^&?AUTOLOAD$/ ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:139: 	    *{ $callpkg . '::AUTOLOAD' } = \&AUTOLOAD;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:139: 	    *{ $callpkg . '::AUTOLOAD' } = \&AUTOLOAD;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:155:     (my $calldir = $callpkg) =~ s#::#/#g;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:156:     my $path = $INC{$calldir . '.pm'};
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:157:     if (defined($path)) {
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:64: use Tie::Hash;

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:188: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:188: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:188: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:189: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:189: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:189: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:37:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:38:     my $package = (caller(0))[0];

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:39:     if (! defined $warnings::Bits{$package}) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:40:         $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:41:         vec($warnings::Bits{'all'}, $warnings::LAST_BIT, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:42:         $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:43: 	foreach my $k (keys %warnings::Bits) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:46:         $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:47:         vec($warnings::DeadBits{'all'}, $warnings::LAST_BIT++, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:3: our $VERSION = '1.03';

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:257: 1;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:64: use Tie::Hash;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:64: use Tie::Hash;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:66: use vars qw($SIGACTION_FLAGS $_SIGRTMIN $_SIGRTMAX $_sigrtn @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:66: use vars qw($SIGACTION_FLAGS $_SIGRTMIN $_SIGRTMAX $_sigrtn @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:66: use vars qw($SIGACTION_FLAGS $_SIGRTMIN $_SIGRTMAX $_sigrtn @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:5: our(@ISA, %EXPORT_TAGS, @EXPORT_OK, @EXPORT, $AUTOLOAD, %SIGRT) = ();

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:7: our $VERSION = "1.19";

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:22: my $loaded;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:36: XSLoader::load 'POSIX', $VERSION;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:23:     my ($module, $modlibname) = caller();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:25:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:26:         $module = $_[0];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:32:     my $boots = "$module\::bootstrap";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:33:     goto &$boots if defined &$boots;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:35:     goto \&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:37:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:38:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:40:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:41:     my $c = @modparts;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:42:     $modlibname =~ s,[\\/][^\\/]+$,, while $c--;    # Q&D basename

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:43:     my $file = "$modlibname/auto/$modpname/$modfname.dll";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:47:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:48:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:50:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:56:     goto \&XSLoader::bootstrap_inherit if not -f $file or -s $bs;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:58:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:59:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:60:     @DynaLoader::dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:62:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:71:     my $libref = dl_load_file($file, 0) or do { 

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:75:     push(@DynaLoader::dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:77:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:78:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:83:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:88:     push(@DynaLoader::dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:90:   boot:

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:94:     push(@DynaLoader::dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:95:     return &$xs(@_);

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:67: @POSIX::SigRt::ISA = qw(Tie::StdHash);

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:69: $SIGACTION_FLAGS = 0;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:71: tie %POSIX::SIGRT, 'POSIX::SigRt';

>> C:/CPANTesters/Perl5.12.4/lib/Tie/Hash.pm:235: sub TIEHASH  { bless {}, $_[0] }

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:77: 1;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:85:     eval { require POSIX; &POSIX::WEXITSTATUS(0) };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:86:     if ($@) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:87:         *_wait2exit = sub { $_[1] >> 8 };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:105:     my $got_unicode;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:105:     my $got_unicode;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:368: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:8: use TAP::Parser::Iterator::Process ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:8: use TAP::Parser::Iterator::Process ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:138: use constant iterator_class => 'TAP::Parser::Iterator::Process';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:138: use constant iterator_class => 'TAP::Parser::Iterator::Process';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:138: use constant iterator_class => 'TAP::Parser::Iterator::Process';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:10: @ISA = qw(TAP::Parser::SourceHandler);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:12: TAP::Parser::IteratorFactory->register_handler(__PACKAGE__);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:74:     my ( $class, $dclass ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:76:     confess("$dclass must implement can_handle & make_iterator methods!")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:80:     my $handlers = $class->handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:84:     return $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:24: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:148: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:10: use TAP::Parser::SourceHandler::Executable ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:10: use TAP::Parser::SourceHandler::Executable ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:11: use TAP::Parser::IteratorFactory           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:11: use TAP::Parser::IteratorFactory           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:11: use TAP::Parser::IteratorFactory           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:12: use TAP::Parser::Iterator::Process         ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:12: use TAP::Parser::Iterator::Process         ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:12: use TAP::Parser::Iterator::Process         ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:13: use TAP::Parser::Utils qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:4: use Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:4: use Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:4: use Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:5: use vars qw($VERSION @ISA @EXPORT_OK);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:5: use vars qw($VERSION @ISA @EXPORT_OK);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:5: use vars qw($VERSION @ISA @EXPORT_OK);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:7: @ISA       = qw( Exporter );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:8: @EXPORT_OK = qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:20: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:72: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:13: use TAP::Parser::Utils qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:13: use TAP::Parser::Utils qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:15: @ISA = 'TAP::Parser::SourceHandler::Executable';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:17: TAP::Parser::IteratorFactory->register_handler(__PACKAGE__);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:74:     my ( $class, $dclass ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:76:     confess("$dclass must implement can_handle & make_iterator methods!")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:80:     my $handlers = $class->handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:84:     return $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:29: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:322: 1;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:13: use TAP::Parser::SourceHandler::Perl ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:13: use TAP::Parser::SourceHandler::Perl ();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:15: use TAP::Parser::Utils qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:15: use TAP::Parser::Utils qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:15: use TAP::Parser::Utils qw( split_shell );
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:17: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:17: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:17: use Config;
>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:29:     my $pkg = shift;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:30:     @_ = @Config::EXPORT unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:32:     my @funcs = grep $_ ne '%Config', @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:33:     my $export_Config = @funcs < @_ ? 1 : 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:36:     my $callpkg = caller(0);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:37:     foreach my $func (@funcs) {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:44:     return;

>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:18: use Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:18: use Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:18: use Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:34: );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:34: );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:21: use vars qw(
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:39:     eval q{use Time::HiRes 'time'};
>> (eval 10)[C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:39]:2: ;>> (eval 10)[C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:39]:2: ;>> (eval 10)[C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:39]:1: use Time::HiRes 'time'
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:50:     my $this = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:51:     for my $i (@_) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:52: 	if (($i eq 'clock_getres'    && !&d_clock_getres)    ||
>> C:/CPANTesters/Perl5.12.4/site/lib/Time/HiRes.pm:63:     Time::HiRes->export_to_level(1, $this, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:81:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:210:       my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:211:       my $level = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:212:       (undef) = shift;			# XXX redundant arg
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:213:       my $callpkg = caller($level);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:214:       $pkg->export($callpkg, @_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:25:   goto &{as_heavy()};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:16:   require Exporter::Heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:19:   my $c = (caller(1))[3];
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:20:   $c =~ s/.*:://;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:21:   \&{"Exporter::Heavy::heavy_$c"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:52:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:58:     };
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:60:     my($pkg, $callpkg, @imports) = @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:61:     my($type, $sym, $cache_is_current, $oops);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:62:     my($exports, $export_cache) = (\@{"${pkg}::EXPORT"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:65:     if (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:66: 	if (!%$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:71: 	if (grep m{^[/!:]}, @imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:116:         my @carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:117: 	foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:118: 	    if (!$export_cache->{$sym}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:152: 	if ($oops) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:161:     my($fail, $fail_cache) = (\@{"${pkg}::EXPORT_FAIL"},
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:164:     if (@$fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:189:     warn "Importing into $callpkg from $pkg: ",
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:192:     foreach $sym (@imports) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter/Heavy.pm:194: 	(*{"${callpkg}::$sym"} = \&{"${pkg}::$sym"}, next)
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:40:     $has_time_hires = !$@;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:3: require 5.00405;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:53: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:56: *verbose  = *Verbose;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:57: *switches = *Switches;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:58: *debug    = *Debug;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:60: $ENV{HARNESS_ACTIVE}  = 1;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:61: $ENV{HARNESS_VERSION} = $VERSION;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:70: @ISA       = ('Exporter');
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:71: @EXPORT    = qw(&runtests);
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:72: @EXPORT_OK = qw(&execute_tests $verbose $switches);
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:74: $Verbose = $ENV{HARNESS_VERBOSE} || 0;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:75: $Debug   = $ENV{HARNESS_DEBUG}   || 0;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:76: $Switches = '-w';
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:77: $Columns = $ENV{HARNESS_COLUMNS} || $ENV{COLUMNS} || 80;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:78: $Columns--;    # Some shells have trouble with a full line of text.
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:79: $Timer      = $ENV{HARNESS_TIMER}       || 0;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:80: $Color      = $ENV{HARNESS_COLOR}       || 0;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:81: $IgnoreExit = $ENV{HARNESS_IGNORE_EXIT} || 0;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:300:     my @inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:300:     my @inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:481: 1;
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:51:     require File::Spec;
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:53:     $Test::Harness::verbose = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:57:     require ExtUtils::Command;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:3: use 5.00503;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:3: use 5.00503;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:3: use 5.00503;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:4: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:4: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:4: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:6: use File::Copy;
>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:10: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:10: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:10: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:11: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:11: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:11: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:12: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:12: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:12: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:369:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:371:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:372:     my $fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:373:     my $no_fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:375:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:377:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:382:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:384:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:385: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:394: 	    $mask |= $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:395: 	    $mask |= $DeadBits{$word} if $fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:396: 	    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:402:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:13: use File::Spec;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:13: use File::Spec;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:13: use File::Spec;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:14: use Config;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:14: use Config;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:14: use Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:29:     my $pkg = shift;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:30:     @_ = @Config::EXPORT unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:32:     my @funcs = grep $_ ne '%Config', @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:33:     my $export_Config = @funcs < @_ ? 1 : 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:36:     my $callpkg = caller(0);

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:37:     foreach my $func (@funcs) {

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:43:     *{"$callpkg\::Config"} = \%Config if $export_Config;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:44:     return;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:55:     if ($^O eq 'VMS') {

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:18: my $Scalar_Util_loaded = eval q{ require Scalar::Util; require overload; 1 };

>> (eval 11)[C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:18]:1:  require Scalar::Util; require overload; 1 
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:9: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:9: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:9: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:10: require Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:11: require List::Util; # List::Util loads the XS
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:11: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:11: use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:11: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:12: require Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:14: our @ISA        = qw(Exporter);
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:15: our @EXPORT_OK  = qw(first min max minstr maxstr reduce sum shuffle);
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:16: our $VERSION    = "1.25";
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:17: our $XS_VERSION = $VERSION;
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:18: $VERSION    = eval $VERSION;
>> (eval 12)[C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:18]:1: 1.25
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:20: require XSLoader;
>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:21: XSLoader::load('List::Util', $XS_VERSION);
>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:23:     my ($module, $modlibname) = caller();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:25:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:26:         $module = $_[0];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:32:     my $boots = "$module\::bootstrap";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:33:     goto &$boots if defined &$boots;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:35:     goto \&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:37:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:38:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:40:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:41:     my $c = @modparts;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:42:     $modlibname =~ s,[\\/][^\\/]+$,, while $c--;    # Q&D basename

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:43:     my $file = "$modlibname/auto/$modpname/$modfname.dll";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:47:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:48:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:50:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:56:     goto \&XSLoader::bootstrap_inherit if not -f $file or -s $bs;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:58:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:59:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:60:     @DynaLoader::dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:62:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:71:     my $libref = dl_load_file($file, 0) or do { 

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:75:     push(@DynaLoader::dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:77:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:78:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:83:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:88:     push(@DynaLoader::dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:90:   boot:

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:94:     push(@DynaLoader::dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:95:     return &$xs(@_);

>> C:/CPANTesters/Perl5.12.4/site/lib/List/Util.pm:23: 1;
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:13: our @ISA       = qw(Exporter);
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:14: our @EXPORT_OK = qw(blessed dualvar reftype weaken isweak tainted readonly openhandle refaddr isvstring looks_like_number set_prototype);
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:15: our $VERSION    = "1.25";
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:16: $VERSION   = eval $VERSION;
>> (eval 13)[C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:16]:1: 1.25
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:18: our @EXPORT_FAIL;
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:20: unless (defined &weaken) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:23: unless (defined &isweak) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:26: unless (defined &isvstring) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Scalar/Util.pm:44: 1;
>> (eval 11)[C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:18]:1:  require Scalar::Util; require overload; 1 
>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:145: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:145: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:145: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:37:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:38:     my $package = (caller(0))[0];

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:39:     if (! defined $warnings::Bits{$package}) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:40:         $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:41:         vec($warnings::Bits{'all'}, $warnings::LAST_BIT, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:42:         $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:43: 	foreach my $k (keys %warnings::Bits) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:46:         $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:47:         vec($warnings::DeadBits{'all'}, $warnings::LAST_BIT++, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:3: our $VERSION = '1.10';

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:103: *StrVal = *AddrRef;

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:121: %constants = (

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:129: %ops = ( with_assign	  => "+ - * / % ** << >> x .",

>> C:/CPANTesters/Perl5.12.4/lib/overload.pm:181: 1;

>> (eval 11)[C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:18]:1:  require Scalar::Util; require overload; 1 
>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:19: our(@ISA, @EXPORT, @EXPORT_OK, $VERSION, $Too_Big, $Syscopy_is_copy);

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:25: $VERSION = '2.18';

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:27: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:28: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:29: @EXPORT = qw(copy move);

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:30: @EXPORT_OK = qw(cp mv);

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:32: $Too_Big = 1024 * 1024 * 2;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:44: my $macfiles;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:45: if ($^O eq 'MacOS') {

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:53: my $use_vms_feature = 0;

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:423: unless (defined &syscopy) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:424:     if ($^O eq 'VMS') {

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:438: 	};

>> C:/CPANTesters/Perl5.12.4/lib/File/Copy.pm:461: 1;

>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:6: use File::Copy;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:6: use File::Copy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:7: use File::Compare;
>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:3: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:3: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:3: use 5.006;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:4: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:4: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:4: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:5: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:5: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:5: use warnings;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:369:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:371:     my $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:372:     my $fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:373:     my $no_fatal = 0 ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:375:     my $mask = ${^WARNING_BITS} ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:377:     if (vec($mask, $Offsets{'all'}, 1)) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:382:     push @_, 'all' unless @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:384:     foreach my $word ( @_ ) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:385: 	if ($word eq 'FATAL') {

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:394: 	    $mask |= $catmask ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:395: 	    $mask |= $DeadBits{$word} if $fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:396: 	    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;

>> C:/CPANTesters/Perl5.12.4/lib/warnings.pm:402:     ${^WARNING_BITS} = $mask ;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:6: our($VERSION, @ISA, @EXPORT, @EXPORT_OK, $Too_Big);

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:8: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:10: $VERSION = '1.1006';

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:11: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:12: @EXPORT = qw(compare);

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:13: @EXPORT_OK = qw(cmp compare_text);

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:15: $Too_Big = 1024 * 1024 * 2;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:120: *cmp = \&compare;

>> C:/CPANTesters/Perl5.12.4/lib/File/Compare.pm:134: 1;

>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:7: use File::Compare;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:7: use File::Compare;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:8: use File::Basename;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:8: use File::Basename;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:8: use File::Basename;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:9: use File::Path qw(rmtree);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:9: use File::Path qw(rmtree);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:9: use File::Path qw(rmtree);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:11: use vars qw(@ISA @EXPORT @EXPORT_OK $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:11: use vars qw(@ISA @EXPORT @EXPORT_OK $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:11: use vars qw(@ISA @EXPORT @EXPORT_OK $VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:90:  @ARGV = map(/[$wild_regex]/o ? glob($_) : $_,@ARGV);
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:7: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:7: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:7: use XSLoader ();

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:4: our($VERSION, @ISA, @EXPORT_OK, @EXPORT_FAIL, %EXPORT_TAGS,

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:9: @ISA = qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:14: @EXPORT_OK   = qw(

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:36: %EXPORT_TAGS = (

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:59: $VERSION = '1.07';

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:96: XSLoader::load 'File::Glob', $VERSION;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:23:     my ($module, $modlibname) = caller();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:25:     if (@_) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:26:         $module = $_[0];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:32:     my $boots = "$module\::bootstrap";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:33:     goto &$boots if defined &$boots;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:35:     goto \&XSLoader::bootstrap_inherit unless $module and defined &dl_load_file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:37:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:38:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:40:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:41:     my $c = @modparts;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:42:     $modlibname =~ s,[\\/][^\\/]+$,, while $c--;    # Q&D basename

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:43:     my $file = "$modlibname/auto/$modpname/$modfname.dll";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:47:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:48:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:50:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:56:     goto \&XSLoader::bootstrap_inherit if not -f $file or -s $bs;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:58:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:59:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:60:     @DynaLoader::dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:62:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:71:     my $libref = dl_load_file($file, 0) or do { 

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:75:     push(@DynaLoader::dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:77:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:78:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:83:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:88:     push(@DynaLoader::dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:90:   boot:

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:94:     push(@DynaLoader::dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/site/lib/XSLoader.pm:95:     return &$xs(@_);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:112: $DEFAULT_FLAGS = GLOB_CSH();

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:105:     GLOB_BRACE()

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:85:     my $constname;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:86:     ($constname = $AUTOLOAD) =~ s/.*:://;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:87:     my ($error, $val) = constant($constname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:88:     if ($error) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92:     eval "sub $AUTOLOAD { $val }";

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:93:     goto &$AUTOLOAD;

>> (eval 14)[C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92]:1: sub File::Glob::GLOB_BRACE { 128 }
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:85:     my $constname;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:86:     ($constname = $AUTOLOAD) =~ s/.*:://;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:87:     my ($error, $val) = constant($constname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:88:     if ($error) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92:     eval "sub $AUTOLOAD { $val }";

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:93:     goto &$AUTOLOAD;

>> (eval 15)[C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92]:1: sub File::Glob::GLOB_NOMAGIC { 512 }
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:85:     my $constname;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:86:     ($constname = $AUTOLOAD) =~ s/.*:://;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:87:     my ($error, $val) = constant($constname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:88:     if ($error) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92:     eval "sub $AUTOLOAD { $val }";

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:93:     goto &$AUTOLOAD;

>> (eval 16)[C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92]:1: sub File::Glob::GLOB_QUOTE { 1024 }
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:85:     my $constname;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:86:     ($constname = $AUTOLOAD) =~ s/.*:://;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:87:     my ($error, $val) = constant($constname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:88:     if ($error) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92:     eval "sub $AUTOLOAD { $val }";

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:93:     goto &$AUTOLOAD;

>> (eval 17)[C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92]:1: sub File::Glob::GLOB_TILDE { 2048 }
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:85:     my $constname;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:86:     ($constname = $AUTOLOAD) =~ s/.*:://;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:87:     my ($error, $val) = constant($constname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:88:     if ($error) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92:     eval "sub $AUTOLOAD { $val }";

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:93:     goto &$AUTOLOAD;

>> (eval 18)[C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92]:1: sub File::Glob::GLOB_ALPHASORT { 8192 }
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:113: if ($^O =~ /^(?:MSWin32|VMS|os2|dos|riscos|MacOS)$/) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:114:     $DEFAULT_FLAGS |= GLOB_NOCASE();

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:85:     my $constname;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:86:     ($constname = $AUTOLOAD) =~ s/.*:://;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:87:     my ($error, $val) = constant($constname);

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:88:     if ($error) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92:     eval "sub $AUTOLOAD { $val }";

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:93:     goto &$AUTOLOAD;

>> (eval 19)[C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:92]:1: sub File::Glob::GLOB_NOCASE { 4096 }
>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:133: my %iter;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:134: my %entries;

>> C:/CPANTesters/Perl5.12.4/lib/File/Glob.pm:188: 1;

>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:90:  @ARGV = map(/[$wild_regex]/o ? glob($_) : $_,@ARGV);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:90:  @ARGV = map(/[$wild_regex]/o ? glob($_) : $_,@ARGV);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:10: require Exporter;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:12: @ISA       = qw(Exporter);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:13: @EXPORT    = qw(cp rm_f rm_rf mv cat eqtime mkpath touch test_f test_d chmod
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:15: $VERSION = '1.17';
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:17: my $Is_VMS   = $^O eq 'VMS';
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:18: my $Is_VMS_mode = $Is_VMS;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:19: my $Is_VMS_noefs = $Is_VMS;
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:20: my $Is_Win32 = $^O eq 'MSWin32';
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:22: if( $Is_VMS ) {
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:87: my $wild_regex = $Is_VMS ? '*%' : '*?';
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:58:     my @argv = ExtUtils::Command::expand_wildcards(@ARGV);
>> C:/CPANTesters/Perl5.12.4/lib/ExtUtils/Command.pm:90:  @ARGV = map(/[$wild_regex]/o ? glob($_) : $_,@ARGV);
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:60:     local @INC = @INC;
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:61:     unshift @INC, map { File::Spec->rel2abs($_) } @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:61:     unshift @INC, map { File::Spec->rel2abs($_) } @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:318:     my ($self,$path,$base ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:320:     my $is_abs = $self->file_name_is_absolute($path);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:111:     my ($self,$file) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:113:     if ($file =~ m{^($VOL_RX)}o) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:119:     return $file =~  m{^[\\/]} ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:323:     return $self->canonpath( $path ) if $is_abs == 2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:325:     if ($is_abs) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:331:     if ( !defined( $base ) || $base eq '' ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:332:       require Cwd ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:333:       $base = Cwd::getdcwd( ($self->splitpath( $path ))[0] ) if defined &Cwd::getdcwd ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:209:     my ($self,$path, $nofile) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:210:     my ($volume,$directory,$file) = ('','','');
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:211:     if ( $nofile ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:218:         $path =~ 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:223:         $volume    = $1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:224:         $directory = $2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:225:         $file      = $3;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:228:     return ($volume,$directory,$file);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:334:       $base = $self->_cwd() unless defined $base ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:343:     my ( $path_directories, $path_file ) =
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:209:     my ($self,$path, $nofile) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:210:     my ($volume,$directory,$file) = ('','','');
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:211:     if ( $nofile ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:212:         $path =~ 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:214:         $volume    = $1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:215:         $directory = $2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:228:     return ($volume,$directory,$file);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:346:     my ( $base_volume, $base_directories ) =
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:209:     my ($self,$path, $nofile) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:210:     my ($volume,$directory,$file) = ('','','');
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:211:     if ( $nofile ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:212:         $path =~ 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:214:         $volume    = $1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:215:         $directory = $2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:228:     return ($volume,$directory,$file);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:349:     $path = $self->catpath( 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:146:     shift;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:150:     return ""
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:152:     shift, return _canon_cat( "/", @_ )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:157:     return _canon_cat( ($_[0].'\\'), @_[1..$#_] )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:160:     return _canon_cat( @_ );
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:381:     my ($first, @rest) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:383:     my $volume = $first =~ s{ \A ([A-Za-z]:) ([\\/]?) }{}x	# drive letter
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:392:     my $path   = join "\\", $first, @rest;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:394:     $path =~ tr#\\/#\\\\#s;		# xx/yy --> xx\yy & xx\\yy --> xx\yy
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:397:     $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:411:     $path =~ s{ (\A|\\)			# at begin or after a slash
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:416:     while ( $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:426:     $path =~ s#\A\\##;			# \xx --> xx  NOTE: this is *not* root
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:427:     $path =~ s#\\\z##;			# xx\ --> xx
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:429:     if ( $volume =~ m#\\\z# )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:431: 	$path =~ s{ \A			# at begin
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:437: 	return $1			# \\HOST\SHARE\ --> \\HOST\SHARE
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:441:     return $path ne "" || $volume ? $volume.$path : ".";
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:285:     my ($self,$volume,$directory,$file) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:289:     my $v;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:290:     $volume .= $v
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:295:     $volume .= $directory ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:299:     if ( $volume !~ m@^[a-zA-Z]:\Z(?!\n)@s &&
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:308:     $volume .= $file ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:310:     return $volume ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:355:     return $self->canonpath( $path ) ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:185:     return $_[1] if !defined($_[1]) or $_[1] eq '';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:186:     return _canon_cat( $_[1] );
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:381:     my ($first, @rest) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:383:     my $volume = $first =~ s{ \A ([A-Za-z]:) ([\\/]?) }{}x	# drive letter
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:392:     my $path   = join "\\", $first, @rest;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:394:     $path =~ tr#\\/#\\\\#s;		# xx/yy --> xx\yy & xx\\yy --> xx\yy
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:397:     $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:411:     $path =~ s{ (\A|\\)			# at begin or after a slash
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:416:     while ( $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:426:     $path =~ s#\A\\##;			# \xx --> xx  NOTE: this is *not* root
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:427:     $path =~ s#\\\z##;			# xx\ --> xx
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:429:     if ( $volume =~ m#\\\z# )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:431: 	$path =~ s{ \A			# at begin
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:437: 	return $1			# \\HOST\SHARE\ --> \\HOST\SHARE
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:441:     return $path ne "" || $volume ? $volume.$path : ".";
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:61:     unshift @INC, map { File::Spec->rel2abs($_) } @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:318:     my ($self,$path,$base ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:320:     my $is_abs = $self->file_name_is_absolute($path);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:111:     my ($self,$file) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:113:     if ($file =~ m{^($VOL_RX)}o) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:119:     return $file =~  m{^[\\/]} ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:323:     return $self->canonpath( $path ) if $is_abs == 2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:325:     if ($is_abs) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:331:     if ( !defined( $base ) || $base eq '' ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:332:       require Cwd ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:333:       $base = Cwd::getdcwd( ($self->splitpath( $path ))[0] ) if defined &Cwd::getdcwd ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:209:     my ($self,$path, $nofile) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:210:     my ($volume,$directory,$file) = ('','','');
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:211:     if ( $nofile ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:218:         $path =~ 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:223:         $volume    = $1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:224:         $directory = $2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:225:         $file      = $3;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:228:     return ($volume,$directory,$file);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:334:       $base = $self->_cwd() unless defined $base ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:343:     my ( $path_directories, $path_file ) =
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:209:     my ($self,$path, $nofile) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:210:     my ($volume,$directory,$file) = ('','','');
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:211:     if ( $nofile ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:212:         $path =~ 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:214:         $volume    = $1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:215:         $directory = $2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:228:     return ($volume,$directory,$file);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:346:     my ( $base_volume, $base_directories ) =
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:209:     my ($self,$path, $nofile) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:210:     my ($volume,$directory,$file) = ('','','');
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:211:     if ( $nofile ) {
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:212:         $path =~ 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:214:         $volume    = $1;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:215:         $directory = $2;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:228:     return ($volume,$directory,$file);
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:349:     $path = $self->catpath( 
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:146:     shift;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:150:     return ""
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:152:     shift, return _canon_cat( "/", @_ )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:157:     return _canon_cat( ($_[0].'\\'), @_[1..$#_] )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:160:     return _canon_cat( @_ );
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:381:     my ($first, @rest) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:383:     my $volume = $first =~ s{ \A ([A-Za-z]:) ([\\/]?) }{}x	# drive letter
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:392:     my $path   = join "\\", $first, @rest;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:394:     $path =~ tr#\\/#\\\\#s;		# xx/yy --> xx\yy & xx\\yy --> xx\yy
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:397:     $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:411:     $path =~ s{ (\A|\\)			# at begin or after a slash
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:416:     while ( $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:426:     $path =~ s#\A\\##;			# \xx --> xx  NOTE: this is *not* root
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:427:     $path =~ s#\\\z##;			# xx\ --> xx
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:429:     if ( $volume =~ m#\\\z# )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:431: 	$path =~ s{ \A			# at begin
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:437: 	return $1			# \\HOST\SHARE\ --> \\HOST\SHARE
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:441:     return $path ne "" || $volume ? $volume.$path : ".";
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:285:     my ($self,$volume,$directory,$file) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:289:     my $v;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:290:     $volume .= $v
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:295:     $volume .= $directory ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:299:     if ( $volume !~ m@^[a-zA-Z]:\Z(?!\n)@s &&
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:308:     $volume .= $file ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:310:     return $volume ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:355:     return $self->canonpath( $path ) ;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:185:     return $_[1] if !defined($_[1]) or $_[1] eq '';
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:186:     return _canon_cat( $_[1] );
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:381:     my ($first, @rest) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:383:     my $volume = $first =~ s{ \A ([A-Za-z]:) ([\\/]?) }{}x	# drive letter
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:392:     my $path   = join "\\", $first, @rest;
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:394:     $path =~ tr#\\/#\\\\#s;		# xx/yy --> xx\yy & xx\\yy --> xx\yy
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:397:     $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:411:     $path =~ s{ (\A|\\)			# at begin or after a slash
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:416:     while ( $path =~ s{(?:
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:426:     $path =~ s#\A\\##;			# \xx --> xx  NOTE: this is *not* root
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:427:     $path =~ s#\\\z##;			# xx\ --> xx
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:429:     if ( $volume =~ m#\\\z# )
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:431: 	$path =~ s{ \A			# at begin
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:437: 	return $1			# \\HOST\SHARE\ --> \\HOST\SHARE
>> C:/CPANTesters/Perl5.12.4/lib/File/Spec/Win32.pm:441:     return $path ne "" || $volume ? $volume.$path : ".";
>> C:/CPANTesters/Perl5.12.4/site/lib/ExtUtils/Command/MM.pm:62:     Test::Harness::runtests(sort { lc $a cmp lc $b } @argv);
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:158:     my @tests = @_;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:161:     local ( $\, $, );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:163:     my $harness   = _new_harness();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:209:     my $sub_args = shift || {};
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:211:     my ( @lib, @switches );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:212:     my @opt = split_shell( $Switches, $ENV{HARNESS_PERL_SWITCHES} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:52:     my @parts = ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:54:     for my $switch ( grep defined && length, @_ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:55:         push @parts, $1 while $switch =~ /
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:65:     for (@parts) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:66:         s/ \\(.) | ['"] /defined $1 ? $1 : ''/exg;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Utils.pm:69:     return @parts;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:213:     while ( my $opt = shift @opt ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:214:         if ( $opt =~ /^ -I (.*) $ /x ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:218:             push @switches, $opt;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:223:     push @lib, _filtered_inc() if IS_VMS;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:226:     my $verbosity = ( $Verbose ? ( $Verbose !~ /\d/ ) ? 1 : $Verbose : 0 );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:228:     my $args = {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:238:     $args->{stdout} = $sub_args->{out}
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:241:     if ( defined( my $env_opt = $ENV{HARNESS_OPTIONS} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:255:     my $class = $ENV{HARNESS_SUBCLASS} || 'TAP::Harness';
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:256:     return TAP::Harness->_construct( $class, $args );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:122:     my ( $self, $class, @args ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:124:     $self->_croak("Bad module name $class")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:127:     unless ( $class->can('new') ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:133:     return $class->new(@args);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:383:         my ( $self, $arg_for ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:384:         $arg_for ||= {};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:386:         $self->SUPER::_initialize( $arg_for, \@legal_callback );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:56:     my ( $self, $arg_for, $ok_callback ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:60:     $self->{ok_callbacks} = \%ok_map;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:62:     if ( my $cb = delete $arg_for->{callbacks} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:68:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:387:         my %arg_for = %$arg_for;    # force a shallow copy
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:389:         for my $name ( sort keys %VALIDATION_FOR ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:392:                 my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:394:                 my $value = $self->$validate($property);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:85:         ignore_exit       => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:85:         ignore_exit       => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:395:                 if ( $self->_error ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:55:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:56:     return $self->{error} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:398:                 $self->$name($value);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:392:                 my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:394:                 my $value = $self->$validate($property);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:69:             my ( $self, $libs ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:70:             $libs = [$libs] unless 'ARRAY' eq ref $libs;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:72:             return [ map {"-I$_"} @$libs ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:395:                 if ( $self->_error ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:55:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:56:     return $self->{error} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:398:                 $self->$name($value);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:96:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:97:                 unless (@_) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:103:                 $self->_croak("Too many arguments to method '$method'")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:105:                 my $args = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:106:                 $args = [$args] unless ref $args;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:107:                 $self->{$method} = $args;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:108:                 return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:392:                 my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:394:                 my $value = $self->$validate($property);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:74:         switches          => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:74:         switches          => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:395:                 if ( $self->_error ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:55:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:56:     return $self->{error} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:398:                 $self->$name($value);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:96:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:97:                 unless (@_) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:103:                 $self->_croak("Too many arguments to method '$method'")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:105:                 my $args = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:106:                 $args = [$args] unless ref $args;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:107:                 $self->{$method} = $args;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:108:                 return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:390:             my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:391:             if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:402:         $self->jobs(1) unless defined $self->jobs;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:404:         local $default_class{formatter_class} = 'TAP::Formatter::File'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:407:         while ( my ( $attr, $class ) = each %default_class ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:408:             $self->$attr( $self->$attr() || $class );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:408:             $self->$attr( $self->$attr() || $class );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:408:             $self->$attr( $self->$attr() || $class );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:408:             $self->$attr( $self->$attr() || $class );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:408:             $self->$attr( $self->$attr() || $class );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:411:         unless ( $self->formatter ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:416:             my %formatter_args = ( jobs => $self->jobs );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:417:             for my $name (@FORMATTER_ARGS) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:419:                     $formatter_args{$name} = $property;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:419:                     $formatter_args{$name} = $property;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:419:                     $formatter_args{$name} = $property;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:418:                 if ( defined( my $property = delete $arg_for{$name} ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:424:                 $self->_construct( $self->formatter_class, \%formatter_args )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:122:     my ( $self, $class, @args ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:124:     $self->_croak("Bad module name $class")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:127:     unless ( $class->can('new') ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:128:         local $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:129:         eval "require $class";
>> (eval 20)[C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:129]:2: ;>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:4: use TAP::Formatter::Base ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:4: use TAP::Base ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:4: use TAP::Base ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:4: use TAP::Base ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:5: use POSIX qw(strftime);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:5: use POSIX qw(strftime);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:5: use POSIX qw(strftime);
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:25:     load_imports() unless $loaded++;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:41:     if ($AUTOLOAD =~ /::(_?[a-z])/) {

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:43: 	$AutoLoader::AUTOLOAD = $AUTOLOAD;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:44: 	goto &AutoLoader::AUTOLOAD

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:22:     my $sub = $AUTOLOAD;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:23:     my $filename = AutoLoader::find_filename( $sub );
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:55:     my $sub = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:56:     my $filename;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:72: 	my ($pkg,$func) = ($sub =~ /(.*)::([^:]+)$/);
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:72: 	my ($pkg,$func) = ($sub =~ /(.*)::([^:]+)$/);
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:73: 	$pkg =~ s#::#/#g;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:74: 	if (defined($filename = $INC{"$pkg.pm"})) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:75: 	    if ($is_macos) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:80: 		$filename = undef
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:90: 	    if (defined $filename and -r $filename) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:91: 		unless ($filename =~ m|^/|s) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:92: 		    if ($is_dosish) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:93: 			unless ($filename =~ m{^([a-z]:)?[\\/]}is) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:119: 	unless (defined $filename) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:125:     return $filename;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:25:     my $save = $@;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:26:     local $!; # Do not munge the value. 
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:27:     eval { local $SIG{__DIE__}; require $filename };
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:27:     eval { local $SIG{__DIE__}; require $filename };
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:27:     eval { local $SIG{__DIE__}; require $filename };
>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):982: 1;

>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:28:     if ($@) {
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:50:     $@ = $save;
>> C:/CPANTesters/Perl5.12.4/site/lib/AutoLoader.pm:51:     goto &$sub;
>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):760: %EXPORT_TAGS = (

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):912:   my %export;

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):912:   my %export;

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):913:   @export{map {@$_} values %EXPORT_TAGS} = ();

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):916:   push @EXPORT, keys %export;

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):919: @EXPORT_OK = qw(

>> ..\..\lib\POSIX.pm (autosplit into ..\..\lib\auto\POSIX\load_imports.al):978: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:26:     my $this = shift;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:27:     my @list = map { m/^\w+_h$/ ? ":$_" : $_ } @_;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:27:     my @list = map { m/^\w+_h$/ ? ":$_" : $_ } @_;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:28:     local $Exporter::ExportLevel = 1;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:29:     Exporter::import($this,@list);

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:7: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:7: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:7: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:13:     @ISA = qw(TAP::Base);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:33:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:35:     my @getter_setters = qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:41:     __PACKAGE__->mk_methods( @getter_setters, keys %VALIDATION_FOR );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:145:     my ( $class, @methods ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:146:     for my $method_name (@methods) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:9: my $MAX_ERRORS = 5;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:10: my %VALIDATION_FOR;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:54: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:454: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:4: use TAP::Formatter::Base ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:4: use TAP::Formatter::Base ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:5: use TAP::Formatter::File::Session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:4: use TAP::Formatter::Session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:4: use TAP::Base;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:4: use TAP::Base;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:4: use TAP::Base;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:6: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:6: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:6: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:17:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:17:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:17:         no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:14:     @ACCESSOR = qw( name formatter parser show_count );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:16:     for my $method (@ACCESSOR) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:8: @ISA = qw(TAP::Base);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:10: my @ACCESSOR;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:32: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:183: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:4: use TAP::Formatter::Session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:4: use TAP::Formatter::Session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:6: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:6: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:6: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:8: @ISA = qw(TAP::Formatter::Session);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:20: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:110: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:5: use TAP::Formatter::File::Session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:5: use TAP::Formatter::File::Session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:6: use POSIX qw(strftime);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:6: use POSIX qw(strftime);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:6: use POSIX qw(strftime);
>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:25:     load_imports() unless $loaded++;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:26:     my $this = shift;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:27:     my @list = map { m/^\w+_h$/ ? ":$_" : $_ } @_;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:27:     my @list = map { m/^\w+_h$/ ? ":$_" : $_ } @_;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:28:     local $Exporter::ExportLevel = 1;

>> C:/CPANTesters/Perl5.12.4/lib/POSIX.pm:29:     Exporter::import($this,@list);

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:8: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:8: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:8: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:10: @ISA = qw(TAP::Formatter::Base);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:22: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:58: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:130:         $self->_croak("Can't load $class") if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:133:     return $class->new(@args);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:68:     my ( $self, $arg_for ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:69:     $arg_for ||= {};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:71:     $self->SUPER::_initialize($arg_for);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:56:     my ( $self, $arg_for, $ok_callback ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:60:     $self->{ok_callbacks} = \%ok_map;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:62:     if ( my $cb = delete $arg_for->{callbacks} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:68:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:72:     my %arg_for = %$arg_for;    # force a shallow copy
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:74:     $self->verbosity(0);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:76:     for my $name ( keys %VALIDATION_FOR ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:79:             my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:80:             $self->$name( $self->$validate($property) );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:17:         verbosity  => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:17:         verbosity  => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:79:             my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:80:             $self->$name( $self->$validate($property) );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:19:         timer      => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:19:         timer      => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:79:             my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:80:             $self->$name( $self->$validate($property) );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:23:         color      => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:23:         color      => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:79:             my $validate = $VALIDATION_FOR{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:80:             $self->$name( $self->$validate($property) );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:24:         jobs       => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:24:         jobs       => sub { shift; shift },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:77:         my $property = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:78:         if ( defined $property ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:84:     if ( my @props = keys %arg_for ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:89:     $self->stdout( \*STDOUT ) unless $self->stdout;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:91:     if ( $self->color ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:96:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:115:                 $self->{$method} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:428:         if ( my @props = sort keys %arg_for ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:432:         return $self;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:164:     my $aggregate = TAP::Parser::Aggregator->new();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:90:     my ($self) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:91:     $self->{parser_for}  = {};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:92:     $self->{parse_order} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:93:     for my $summary ( keys %SUMMARY_METHOD_FOR ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:94:         $self->{$summary} = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:95:         next if 'total' eq $summary;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:96:         $self->{"descriptions_for_$summary"} = [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:98:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:166:     _aggregate( $harness, $aggregate, @tests );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:128:     my ( $harness, $aggregate, @tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:131:     local $ENV{HARNESS_OPTIONS};
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:133:     _apply_extra_INC($harness);
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:139:     my $harness = shift;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:146:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:78:     my ( $self, $event, $callback ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:80:     my %ok_map = %{ $self->{ok_callbacks} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:80:     my %ok_map = %{ $self->{ok_callbacks} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:82:     $self->_croak('No callbacks may be installed')
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:85:     $self->_croak( "Callback $event is not supported. Valid callbacks are "
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:89:     push @{ $self->{code_for}{$event} }, $callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:89:     push @{ $self->{code_for}{$event} }, $callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:91:     return;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:134:     _aggregate_tests( $harness, $aggregate, @tests );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:150:     my ( $harness, $aggregate, @tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:151:     $aggregate->start();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:203:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:204:     $self->{start_time} = Benchmark->new;
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:536: sub new { my @t = (mytime, times, @_ == 2 ? $_[1] : 0);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:449: sub mytime () { time }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:537: 	  print STDERR "new=@t\n" if $Debug;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:538: 	  bless \@t; }

>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:152:     $harness->aggregate_tests( $aggregate, @tests );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:654:     my ( $self, $aggregate, @tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:656:     my $jobs      = $self->jobs;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:657:     my $scheduler = $self->make_scheduler(@tests);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:695:     my ( $self, @tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:696:     return $self->_construct(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:677:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:682:       map { 'ARRAY' eq ref $_ ? $_ : [$_] } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:681:     return map { @$_ == 1 ? [ $_->[0], $_->[0] ] : $_ }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:681:     return map { @$_ == 1 ? [ $_->[0], $_->[0] ] : $_ }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:122:     my ( $self, $class, @args ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:124:     $self->_croak("Bad module name $class")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:127:     unless ( $class->can('new') ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:128:         local $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:129:         eval "require $class";
>> (eval 21)[C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:129]:2: ;>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:6: use TAP::Parser::Scheduler::Job;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:17: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:107: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:6: use TAP::Parser::Scheduler::Job;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:6: use TAP::Parser::Scheduler::Job;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:7: use TAP::Parser::Scheduler::Spinner;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:4: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:5: use Carp;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:17: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Spinner.pm:53: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:7: use TAP::Parser::Scheduler::Spinner;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:7: use TAP::Parser::Scheduler::Spinner;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:312: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:130:         $self->_croak("Can't load $class") if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:133:     return $class->new(@args);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:40:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:42:     croak "Need a number of key, value pairs" if @_ % 2;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:44:     my %args  = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:45:     my $tests = delete $args{tests} || croak "Need a 'tests' argument";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:46:     my $rules = delete $args{rules} || { par => '**' };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:48:     croak "Unknown arg(s): ", join ', ', sort keys %args
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:53:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:55:     $self->_set_rules( $rules, $tests );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:72:     my ( $self, $rules, $tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:74:       map { 'ARRAY' eq ref $_ ? $_ : [ $_, $_ ] } @$tests;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:73:     my @tests = map { TAP::Parser::Scheduler::Job->new(@$_) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:73:     my @tests = map { TAP::Parser::Scheduler::Job->new(@$_) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:42:     my ( $class, $name, $desc, @ctx ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:43:     return bless {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:75:     my $schedule = $self->_rule_clause( $rules, \@tests );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:85:     my ( $self, $rule, $tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:86:     croak 'Rule clause must be a hash'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:89:     my @type = keys %$rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:90:     croak 'Rule clause must have exactly one key'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:98:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:100:     my $handler = $handlers{ $type[0] }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:102:     my $val = $rule->{ $type[0] };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:106:             'HASH' eq ref $_
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:104:     return $handler->(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:172:     my ( $self, $name, $tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:174:     my $pattern = $self->_glob_to_regexp($name);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:114:     my ( $self, $glob ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:115:     my $nesting;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:116:     my $pattern;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:118:     while (1) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:119:         if ( $glob =~ /\G\*\*/gc ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:122:             $pattern .= '.*?';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:167:         return $pattern if pos $glob == length $glob;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:175:     $pattern = qr/^ $pattern $/x;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:176:     my @match = ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:183:     }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:178:     for ( my $ti = 0; $ti < @$tests; $ti++ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:179:         if ( $tests->[$ti]->filename =~ $pattern ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:82: sub filename    { shift->{filename} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:180:             push @match, splice @$tests, $ti, 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:181:             $ti--;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:185:     return @match;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:95:             [ map { [$_] } @_ ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:95:             [ map { [$_] } @_ ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:79:     $schedule = [ [ $schedule, @tests ] ] if @tests;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:81:     $self->{schedule} = $schedule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:57:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:660:     local $ENV{HARNESS_IS_VERBOSE} = 1
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:664:     $self->formatter->prepare( map { $_->description } $scheduler->get_all );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:195:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:196:     my @all  = $self->_gather( $self->{schedule} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:202:     my ( $self, $rule ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:203:     return unless defined $rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:204:     return $rule unless 'ARRAY' eq ref $rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:205:     return map { defined() ? $self->_gather($_) : () } map {@$_} @$rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:205:     return map { defined() ? $self->_gather($_) : () } map {@$_} @$rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:205:     return map { defined() ? $self->_gather($_) : () } map {@$_} @$rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:202:     my ( $self, $rule ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:203:     return unless defined $rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:204:     return $rule unless 'ARRAY' eq ref $rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:197:     $self->{count} = @all;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:198:     @all;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:664:     $self->formatter->prepare( map { $_->description } $scheduler->get_all );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:83: sub description { shift->{description} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:205:     my ( $self, @tests ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:207:     my $longest = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:209:     for my $test (@tests) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:210:         $longest = length $test if length $test > $longest;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:213:     $self->_longest($longest);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:666:     if ( $self->jobs > 1 ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:670:         $self->_aggregate_single( $aggregate, $scheduler );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:572:     my ( $self, $aggregate, $scheduler ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:575:     while ( my $job = $scheduler->get_job ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:217:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:218:     $self->{count} ||= $self->get_all;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:219:     my @jobs = $self->_find_next_job( $self->{schedule} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:243:     my ( $self, $rule ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:245:     my @queue = ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:246:     my $index = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:247:     while ( $index < @$rule ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:248:         my $seq = $rule->[$index];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:251:         shift @$seq while @$seq && _is_empty( $seq->[0] );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:240: sub _is_empty { !_not_empty(@_) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:232:     my $ar = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:233:     return 1 unless 'ARRAY' eq ref $ar;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:252:         if (@$seq) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:253:             if ( defined $seq->[0] ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:254:                 if ( 'ARRAY' eq ref $seq->[0] ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:258:                     my $job = splice @$seq, 0, 1, undef;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:259:                     $job->on_finish( sub { shift @$seq } );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:57:     my ( $self, $cb ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:58:     $self->{on_finish} = $cb;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:260:                     return $job;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:220:     if (@jobs) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:221:         --$self->{count};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:222:         return $jobs[0];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:576:         next JOB if $job->is_spinner;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:105: sub is_spinner {0}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:578:         my ( $parser, $session ) = $self->make_parser($job);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:775:     my ( $self, $job ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:777:     my $args = $self->_get_parser_args($job);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:714:     my ( $self, $job ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:715:     my $test_prog = $job->filename;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:82: sub filename    { shift->{filename} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:716:     my %args      = ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:718:     $args{sources} = $self->sources if $self->sources;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:720:     my @switches;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:721:     @switches = $self->lib if $self->lib;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:96:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:97:                 unless (@_) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:98:                     $self->{$method} ||= [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:100:                       ? @{ $self->{$method} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:96:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:97:                 unless (@_) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:98:                     $self->{$method} ||= [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:100:                       ? @{ $self->{$method} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:100:                       ? @{ $self->{$method} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:722:     push @switches => $self->switches if $self->switches;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:96:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:97:                 unless (@_) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:98:                     $self->{$method} ||= [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:100:                       ? @{ $self->{$method} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:96:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:97:                 unless (@_) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:98:                     $self->{$method} ||= [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:100:                       ? @{ $self->{$method} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:100:                       ? @{ $self->{$method} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:723:     $args{switches}    = \@switches;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:724:     $args{spool}       = $self->_open_spool($test_prog);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:804:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:805:     my $test = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:807:     if ( my $spool_dir = $ENV{PERL_TEST_HARNESS_DUMP_TAP} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:824:     return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:725:     $args{merge}       = $self->merge;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:726:     $args{ignore_exit} = $self->ignore_exit;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:727:     $args{version}     = $self->version if $self->version;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:729:     if ( my $exec = $self->exec ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:742:         $args{source} = $test_prog;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:745:     if ( defined( my $test_args = $self->test_args ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:762:     return \%args;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:778:     $self->_make_callback( 'parser_args', $args, $job->as_array_ref );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:93:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:94:     return [ $self->filename, $self->description, $self->{context} ||= [] ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:82: sub filename    { shift->{filename} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:83: sub description { shift->{description} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:105:     my $self  = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:106:     my $event = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:108:     my $cb = $self->_callback_for($event);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:100:     my ( $self, $event ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:101:     return $self->{code_for}{$event};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:109:     return unless defined $cb;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:110:     return map { $_->(@_) } @$cb;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:110:     return map { $_->(@_) } @$cb;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:143:             my ( $args, $test ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:144:             push @{ $args->{switches} }, map {"-I$_"} _filtered_inc();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:144:             push @{ $args->{switches} }, map {"-I$_"} _filtered_inc();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:262:     my @inc = grep { !ref } @INC;    #28567
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:262:     my @inc = grep { !ref } @INC;    #28567
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:262:     my @inc = grep { !ref } @INC;    #28567
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:262:     my @inc = grep { !ref } @INC;    #28567
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:262:     my @inc = grep { !ref } @INC;    #28567
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:262:     my @inc = grep { !ref } @INC;    #28567
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:264:     if (IS_VMS) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:274:         s/[\\\/]+$// for @inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:274:         s/[\\\/]+$// for @inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:277:     my @default_inc = _default_inc();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:303:         return @inc if @inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:305:         local $ENV{PERL5LIB};
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:306:         local $ENV{PERLLIB};
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:308:         my $perl = $ENV{HARNESS_PERL} || $^X;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:311:         chomp( @inc = `"$perl" -e "print join qq[\\n], \@INC, q[]"` );
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:312:         return @inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:279:     my @new_inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:280:     my %seen;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:281:     for my $dir (@inc) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:282:         next if $seen{$dir}++;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:284:         if ( $dir eq ( $default_inc[0] || '' ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:288:             push @new_inc, $dir;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:291:         shift @default_inc while @default_inc and $seen{ $default_inc[0] };
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:282:         next if $seen{$dir}++;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:284:         if ( $dir eq ( $default_inc[0] || '' ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:288:             push @new_inc, $dir;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:291:         shift @default_inc while @default_inc and $seen{ $default_inc[0] };
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:282:         next if $seen{$dir}++;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:284:         if ( $dir eq ( $default_inc[0] || '' ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:285:             shift @default_inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:291:         shift @default_inc while @default_inc and $seen{ $default_inc[0] };
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:282:         next if $seen{$dir}++;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:284:         if ( $dir eq ( $default_inc[0] || '' ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:285:             shift @default_inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:291:         shift @default_inc while @default_inc and $seen{ $default_inc[0] };
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:282:         next if $seen{$dir}++;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:284:         if ( $dir eq ( $default_inc[0] || '' ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:285:             shift @default_inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:291:         shift @default_inc while @default_inc and $seen{ $default_inc[0] };
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:294:     return @new_inc;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:144:             push @{ $args->{switches} }, map {"-I$_"} _filtered_inc();
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:144:             push @{ $args->{switches} }, map {"-I$_"} _filtered_inc();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:779:     my $parser = $self->_construct( $self->parser_class, $args );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:122:     my ( $self, $class, @args ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:124:     $self->_croak("Bad module name $class")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:127:     unless ( $class->can('new') ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:128:         local $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:129:         eval "require $class";
>> (eval 22)[C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:129]:2: ;>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:6: use TAP::Base                              ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:6: use TAP::Base                              ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:6: use TAP::Base                              ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:7: use TAP::Parser::Grammar                   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:6: use TAP::Object                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:6: use TAP::Object                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:6: use TAP::Object                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:7: use TAP::Parser::ResultFactory   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:4: use vars qw($VERSION @ISA %CLASS_FOR);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:4: use vars qw($VERSION @ISA %CLASS_FOR);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:4: use vars qw($VERSION @ISA %CLASS_FOR);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:6: use TAP::Object                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:6: use TAP::Object                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:6: use TAP::Object                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:7: use TAP::Parser::Result::Bailout ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:14:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:14:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:14:     no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:13:     my @attrs = qw( plan pragma test comment bailout version unknown yaml );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:15:     for my $token (@attrs) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:16:         my $method = "is_$token";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:8: @ISA = 'TAP::Object';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:33: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:260: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Bailout.pm:63: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:7: use TAP::Parser::Result::Bailout ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:7: use TAP::Parser::Result::Bailout ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:8: use TAP::Parser::Result::Comment ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Comment.pm:61: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:8: use TAP::Parser::Result::Comment ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:8: use TAP::Parser::Result::Comment ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:9: use TAP::Parser::Result::Plan    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:120: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:9: use TAP::Parser::Result::Plan    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:9: use TAP::Parser::Result::Plan    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:10: use TAP::Parser::Result::Pragma  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Pragma.pm:63: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:10: use TAP::Parser::Result::Pragma  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:10: use TAP::Parser::Result::Pragma  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:11: use TAP::Parser::Result::Test    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:9: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:9: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:9: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:21: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:274: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:11: use TAP::Parser::Result::Test    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:11: use TAP::Parser::Result::Test    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:12: use TAP::Parser::Result::Unknown ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:9: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:9: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:9: use vars qw($VERSION);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:21: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Unknown.pm:51: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:12: use TAP::Parser::Result::Unknown ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:12: use TAP::Parser::Result::Unknown ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:13: use TAP::Parser::Result::Version ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Version.pm:63: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:13: use TAP::Parser::Result::Version ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:13: use TAP::Parser::Result::Version ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:14: use TAP::Parser::Result::YAML    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:5: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:6: use TAP::Parser::Result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:7: @ISA = 'TAP::Parser::Result';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:19: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/YAML.pm:62: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:14: use TAP::Parser::Result::YAML    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:14: use TAP::Parser::Result::YAML    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:100:     %CLASS_FOR = (
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:16: @ISA = 'TAP::Object';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:37: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:131: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:7: use TAP::Parser::ResultFactory   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:7: use TAP::Parser::ResultFactory   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:8: use TAP::Parser::YAMLish::Reader ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:6: use TAP::Object ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:8: @ISA     = 'TAP::Object';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:9: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:15: my %UNESCAPES = (
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:21: my $QQ_STRING    = qr{ " (?:\\. | [^"])* " }x;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:22: my $HASH_LINE    = qr{ ^ ($QQ_STRING|\S+) \s* : \s* (?: (.+?) \s* )? $ }x;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:23: my $IS_HASH_KEY  = qr{ ^ [\w\'\"] }x;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:24: my $IS_END_YAML  = qr{ ^ \.\.\. \s* $ }x;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:25: my $IS_QQ_STRING = qr{ ^ $QQ_STRING $ }x;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/YAMLish/Reader.pm:261: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:8: use TAP::Parser::YAMLish::Reader ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:8: use TAP::Parser::YAMLish::Reader ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:10: @ISA = qw(TAP::Object);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:22: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:74: my %language_for;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:79:     my $ok  = qr/(?:not )?ok\b/;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:79:     my $ok  = qr/(?:not )?ok\b/;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:80:     my $num = qr/\d+/;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:177:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:214:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:226:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:495: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:7: use TAP::Parser::Grammar                   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:7: use TAP::Parser::Grammar                   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:8: use TAP::Parser::Result                    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:8: use TAP::Parser::Result                    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:8: use TAP::Parser::Result                    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:9: use TAP::Parser::ResultFactory             ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:9: use TAP::Parser::ResultFactory             ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:9: use TAP::Parser::ResultFactory             ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:10: use TAP::Parser::Source                    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:10: use TAP::Parser::Source                    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:10: use TAP::Parser::Source                    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:11: use TAP::Parser::Iterator                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:11: use TAP::Parser::Iterator                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:11: use TAP::Parser::Iterator                  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:12: use TAP::Parser::IteratorFactory           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:12: use TAP::Parser::IteratorFactory           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:12: use TAP::Parser::IteratorFactory           ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:13: use TAP::Parser::SourceHandler::Executable ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:13: use TAP::Parser::SourceHandler::Executable ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:13: use TAP::Parser::SourceHandler::Executable ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:14: use TAP::Parser::SourceHandler::Perl       ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:14: use TAP::Parser::SourceHandler::Perl       ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:14: use TAP::Parser::SourceHandler::Perl       ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:15: use TAP::Parser::SourceHandler::File       ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:6: use TAP::Parser::SourceHandler    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:6: use TAP::Parser::SourceHandler    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:6: use TAP::Parser::SourceHandler    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:7: use TAP::Parser::IteratorFactory  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:7: use TAP::Parser::IteratorFactory  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:7: use TAP::Parser::IteratorFactory  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:8: use TAP::Parser::Iterator::Stream ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:8: @ISA = 'TAP::Parser::Iterator';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:20: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Stream.pm:95: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:8: use TAP::Parser::Iterator::Stream ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:8: use TAP::Parser::Iterator::Stream ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:110: use constant iterator_class => 'TAP::Parser::Iterator::Stream';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:110: use constant iterator_class => 'TAP::Parser::Iterator::Stream';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:110: use constant iterator_class => 'TAP::Parser::Iterator::Stream';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:10: @ISA = qw(TAP::Parser::SourceHandler);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:12: TAP::Parser::IteratorFactory->register_handler(__PACKAGE__);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:74:     my ( $class, $dclass ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:76:     confess("$dclass must implement can_handle & make_iterator methods!")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:80:     my $handlers = $class->handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:84:     return $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:24: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:112: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:15: use TAP::Parser::SourceHandler::File       ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:15: use TAP::Parser::SourceHandler::File       ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:16: use TAP::Parser::SourceHandler::RawTAP     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:6: use TAP::Parser::SourceHandler   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:6: use TAP::Parser::SourceHandler   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:6: use TAP::Parser::SourceHandler   ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:7: use TAP::Parser::IteratorFactory ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:7: use TAP::Parser::IteratorFactory ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:7: use TAP::Parser::IteratorFactory ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:8: use TAP::Parser::Iterator::Array ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:6: use TAP::Parser::Iterator ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:8: @ISA = 'TAP::Parser::Iterator';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:20: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Array.pm:89: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:8: use TAP::Parser::Iterator::Array ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:8: use TAP::Parser::Iterator::Array ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:10: @ISA = qw(TAP::Parser::SourceHandler);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:12: TAP::Parser::IteratorFactory->register_handler(__PACKAGE__);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:74:     my ( $class, $dclass ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:76:     confess("$dclass must implement can_handle & make_iterator methods!")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:80:     my $handlers = $class->handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:84:     return $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:24: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:114: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:16: use TAP::Parser::SourceHandler::RawTAP     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:16: use TAP::Parser::SourceHandler::RawTAP     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:17: use TAP::Parser::SourceHandler::Handle     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:3: use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:4: use vars qw($VERSION @ISA);
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:6: use TAP::Parser::SourceHandler    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:6: use TAP::Parser::SourceHandler    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:6: use TAP::Parser::SourceHandler    ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:7: use TAP::Parser::IteratorFactory  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:7: use TAP::Parser::IteratorFactory  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:7: use TAP::Parser::IteratorFactory  ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:8: use TAP::Parser::Iterator::Stream ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:8: use TAP::Parser::Iterator::Stream ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:8: use TAP::Parser::Iterator::Stream ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:104: use constant iterator_class => 'TAP::Parser::Iterator::Stream';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:104: use constant iterator_class => 'TAP::Parser::Iterator::Stream';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:104: use constant iterator_class => 'TAP::Parser::Iterator::Stream';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:10: @ISA = qw(TAP::Parser::SourceHandler);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:12: TAP::Parser::IteratorFactory->register_handler(__PACKAGE__);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:74:     my ( $class, $dclass ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:76:     confess("$dclass must implement can_handle & make_iterator methods!")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:80:     my $handlers = $class->handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:82:       unless grep { $_ eq $dclass } @{$handlers};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:81:     push @{$handlers}, $dclass
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:84:     return $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:24: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:106: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:17: use TAP::Parser::SourceHandler::Handle     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:17: use TAP::Parser::SourceHandler::Handle     ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:19: use Carp qw( confess );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:19: use Carp qw( confess );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:19: use Carp qw( confess );
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:45:     @ISA = qw(TAP::Base);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:47:     __PACKAGE__->mk_methods(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:145:     my ( $class, @methods ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:146:     for my $method_name (@methods) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:147:         my $method = "${class}::$method_name";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:153:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:31: $VERSION = '3.23';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:33: my $DEFAULT_TAP_VERSION = 12;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:34: my $MAX_TAP_VERSION     = 13;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:36: $ENV{TAP_VERSION} = $MAX_TAP_VERSION;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:370:     my %initialize = (
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:370:     my %initialize = (
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:386:     my @legal_callback = qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:399:     my @class_overrides = qw(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:826: *actual_ok = \&actual_passed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1898: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:130:         $self->_croak("Can't load $class") if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:133:     return $class->new(@args);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:406:         my ( $self, $arg_for ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:412:         my %args = %{ $arg_for || {} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:412:         my %args = %{ $arg_for || {} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:414:         $self->SUPER::_initialize( \%args, \@legal_callback );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:56:     my ( $self, $arg_for, $ok_callback ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:60:     $self->{ok_callbacks} = \%ok_map;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:62:     if ( my $cb = delete $arg_for->{callbacks} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:68:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:417:         for my $key (@class_overrides) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:418:             my $default_method = "_default_$key";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:419:             my $val = delete $args{$key} || $self->$default_method();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:285: sub _default_grammar_class          {'TAP::Parser::Grammar'}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:420:             $self->$key($val);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:418:             my $default_method = "_default_$key";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:419:             my $val = delete $args{$key} || $self->$default_method();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:286: sub _default_result_factory_class   {'TAP::Parser::ResultFactory'}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:420:             $self->$key($val);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:418:             my $default_method = "_default_$key";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:419:             my $val = delete $args{$key} || $self->$default_method();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:287: sub _default_iterator_factory_class {'TAP::Parser::IteratorFactory'}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:420:             $self->$key($val);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:423:         my $iterator = delete $args{iterator};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:424:         $iterator ||= delete $args{stream};    # deprecated
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:425:         my $tap         = delete $args{tap};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:426:         my $version     = delete $args{version};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:427:         my $raw_source  = delete $args{source};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:428:         my $sources     = delete $args{sources};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:429:         my $exec        = delete $args{exec};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:430:         my $merge       = delete $args{merge};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:431:         my $spool       = delete $args{spool};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:432:         my $switches    = delete $args{switches};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:433:         my $ignore_exit = delete $args{ignore_exit};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:434:         my $test_args   = delete $args{test_args} || [];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:436:         if ( 1 < grep {defined} $iterator, $tap, $raw_source, $exec ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:436:         if ( 1 < grep {defined} $iterator, $tap, $raw_source, $exec ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:436:         if ( 1 < grep {defined} $iterator, $tap, $raw_source, $exec ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:436:         if ( 1 < grep {defined} $iterator, $tap, $raw_source, $exec ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:436:         if ( 1 < grep {defined} $iterator, $tap, $raw_source, $exec ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:442:         if ( my @excess = sort keys %args ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:447:         my $type   = '';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:448:         my $source = TAP::Parser::Source->new;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:65:     my ($self) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:66:     $self->meta(   {} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:140:     $self->{meta} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:141:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:67:     $self->config( {} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:149:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:150:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:151:     $self->{config} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:152:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:68:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:449:         if ($tap) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:458:             $type = 'source ' . ref($raw_source) || $raw_source;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:459:             $source->raw( ref($raw_source) ? $raw_source : \$raw_source );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:133:     $self->{raw} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:134:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:465:         if ( $source->raw ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:466:             my $src_factory = $self->make_iterator_factory($sources);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:362: sub make_iterator_factory { shift->iterator_factory_class->new(@_); }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:56:     my ( $self, $config ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:57:     $self->config( $config || {} )->load_handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:108:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:109:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:110:     unless ( 'HASH' eq ref $_[0] ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:113:     $self->{config} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:114:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:154:     my ($self) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:155:     for my $handler ( keys %{ $self->config } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:155:     for my $handler ( keys %{ $self->config } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:108:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:109:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:160:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:58:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:467:             $source->merge($merge)->switches($switches)
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:156:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:157:     return $self->{merge} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:158:     $self->{merge} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:159:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:163:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:164:     return $self->{switches} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:165:     $self->{switches} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:166:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:170:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:171:     return $self->{test_args} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:172:     $self->{test_args} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:173:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:469:             $iterator = $src_factory->make_iterator($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:201:     my ( $self, $source ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:203:     $self->_croak('no raw source defined!') unless defined $source->raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:205:     $source->config( $self->config )->assemble_meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:108:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:109:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:149:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:150:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:151:     $self->{config} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:152:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:230:     my ($self) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:232:     return $self->meta if $self->has_meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:145:     return scalar %{ shift->meta } ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:145:     return scalar %{ shift->meta } ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:234:     my $meta = $self->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:235:     my $raw  = $self->raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:239:     $meta->{is_object} = UNIVERSAL::isa( $raw, 'UNIVERSAL' ) ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:241:     if ( $meta->{is_object} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:245:         my $ref = lc( ref($raw) );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:246:         $meta->{"is_$ref"} = 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:249:     if ( $meta->{is_scalar} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:250:         my $source = $$raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:251:         $meta->{length} = length($$raw);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:252:         $meta->{has_newlines} = $$raw =~ /\n/ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:255:         if ( !$meta->{has_newlines} and $meta->{length} < 1024 ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:256:             my $file = {};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:257:             $file->{exists} = -e $source ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:258:             if ( $file->{exists} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:259:                 $meta->{file} = $file;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:262:                 $file->{stat}    = [ stat(_) ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:263:                 $file->{empty}   = -z _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:264:                 $file->{size}    = -s _;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:265:                 $file->{text}    = -T _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:266:                 $file->{binary}  = -B _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:267:                 $file->{read}    = -r _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:268:                 $file->{write}   = -w _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:269:                 $file->{execute} = -x _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:270:                 $file->{setuid}  = -u _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:271:                 $file->{setgid}  = -g _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:272:                 $file->{sticky}  = -k _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:274:                 $meta->{is_file} = $file->{is_file} = -f _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:275:                 $meta->{is_dir}  = $file->{is_dir}  = -d _ ? 1 : 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:278:                 $meta->{is_symlink} = $file->{is_symlink}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:280:                 if ( $file->{is_symlink} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:286:                   = map { defined $_ ? $_ : '' }
>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:105:   my($fullname,@suffices) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:107:   unless (defined $fullname) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:112:   my $orig_type = '';

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:113:   my($type,$igncase) = ($Fileparse_fstype, $Fileparse_igncase);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:115:   my($taint) = substr($fullname,0,0);  # Is $fullname tainted?

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:117:   if ($type eq "VMS" and $fullname =~ m{/} ) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:123:   my($dirpath, $basename);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:125:   if (grep { $type eq $_ } qw(MSDOS DOS MSWin32 Epoc)) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:125:   if (grep { $type eq $_ } qw(MSDOS DOS MSWin32 Epoc)) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:125:   if (grep { $type eq $_ } qw(MSDOS DOS MSWin32 Epoc)) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:125:   if (grep { $type eq $_ } qw(MSDOS DOS MSWin32 Epoc)) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:125:   if (grep { $type eq $_ } qw(MSDOS DOS MSWin32 Epoc)) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:126:     ($dirpath,$basename) = ($fullname =~ /^((?:.*[:\\\/])?)(.*)/s);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:127:     $dirpath .= '.\\' unless $dirpath =~ /[\\\/]\z/;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:161:   my $tail   = '';

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:162:   my $suffix = '';

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:163:   if (@suffices) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:164:     foreach $suffix (@suffices) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:165:       my $pat = ($igncase ? '(?i)' : '') . "($suffix)\$";

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:166:       if ($basename =~ s/$pat//s) {

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:167:         $taint .= substr($suffix,0,0);

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:168:         $tail = $1 . $tail;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:174:   $tail .= $taint;

>> C:/CPANTesters/Perl5.12.4/lib/File/Basename.pm:175:   wantarray ? ($basename .= $taint, $dirpath .= $taint, $tail)

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:285:                 ( $file->{basename}, $file->{dir}, $file->{ext} )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:285:                 ( $file->{basename}, $file->{dir}, $file->{ext} )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:285:                 ( $file->{basename}, $file->{dir}, $file->{ext} )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:288:                 $file->{lc_ext} = lc( $file->{ext} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:289:                 $file->{basename} .= $file->{ext} if $file->{ext};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:291:                 if ( $file->{text} and $file->{read} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:292:                     eval { $file->{shebang} = $self->_read_shebang($$raw); };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:292:                     eval { $file->{shebang} = $self->_read_shebang($$raw); };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:326:         my ( $self, $file ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:327:         my $shebang;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:328:         local *TEST;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:329:         if ( open( TEST, $file ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:330:             $shebang = <TEST>;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:331:             chomp $shebang;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:332:             close(TEST) or die "Can't close $file. $!\n";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:337:         return $shebang;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:293:                     if ( my $e = $@ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:307:     return $meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:208:     return $source->raw
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:213:     my $sd_class = $self->detect_source($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:243:     my ( $self, $source ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:245:     confess('no raw source ref defined!') unless defined $source->raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:248:     my %handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:249:     for my $dclass ( @{ $self->handlers } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:249:     for my $dclass ( @{ $self->handlers } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:250:         my $confidence = $dclass->can_handle($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:68:     my ( $class, $src ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:69:     my $meta = $src->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:71:     if ( $meta->{is_file} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:72:         my $file = $meta->{file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:74:         return 0.85 if $file->{execute} && $file->{binary};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:75:         return 0.8 if $file->{lc_ext} eq '.bat';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:76:         return 0.25 if $file->{execute};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:82:     return 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:253:         $handlers{$dclass} = $confidence if $confidence;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:250:         my $confidence = $dclass->can_handle($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:75:     my ( $class, $source ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:76:     my $meta = $source->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:78:     return 0 unless $meta->{is_file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:79:     my $file = $meta->{file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:81:     if ( my $shebang = $file->{shebang} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:82:         return 0.9 if $shebang =~ /^#!.*\bperl/;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:87:         return 0.3;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:253:         $handlers{$dclass} = $confidence if $confidence;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:250:         my $confidence = $dclass->can_handle($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:66:     my ( $class, $src ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:67:     my $meta   = $src->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:68:     my $config = $src->config_for($class);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:364:     my ( $self, $class ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:365:     my ($abbrv_class) = ( $class =~ /(?:\:\:)?(\w+)$/ );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:366:     my $config = $self->config->{$abbrv_class} || $self->config->{$class};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:149:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:150:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:149:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:150:     return $self->{config} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:367:     return $config;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:70:     return 0 unless $meta->{is_file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:71:     my $file = $meta->{file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:72:     return 0.9 if $file->{lc_ext} eq '.tap';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:74:     if ( my $exts = $config->{extensions} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/File.pm:78:     return 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:253:         $handlers{$dclass} = $confidence if $confidence;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:250:         my $confidence = $dclass->can_handle($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:69:     my ( $class, $src ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:70:     my $meta = $src->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/RawTAP.pm:72:     return 0 if $meta->{file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:253:         $handlers{$dclass} = $confidence if $confidence;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:250:         my $confidence = $dclass->can_handle($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:67:     my ( $class, $src ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:68:     my $meta = $src->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:70:     return 0.9
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:74:     return 0.8 if $meta->{is_glob};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Handle.pm:76:     return 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:253:         $handlers{$dclass} = $confidence if $confidence;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:256:     if ( !%handlers ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:270:           sort { $handlers{$a} cmp $handlers{$b} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:268:     my @handlers = (
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:275:     if ( $ENV{TAP_HARNESS_SOURCE_FACTORY_VOTES} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:284:     return pop @handlers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:214:     $self->_last_handler($sd_class);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:118:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:119:     return $self->{last_handler} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:120:     $self->{last_handler} = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:121:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:216:     return if $self->_testing;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:125:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:126:     return $self->{testing} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:219:     my $iterator = $sd_class->make_iterator($source);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:138:     my ( $class, $source ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:139:     my $meta        = $source->meta;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:140:     my $perl_script = ${ $source->raw };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:140:     my $perl_script = ${ $source->raw };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:142:     $class->_croak("Cannot find ($perl_script)") unless $meta->{is_file};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:145:     $class->_autoflush_stdhandles;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:131:     my ($class) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:133:     $class->_autoflush( \*STDOUT );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:142:     my ( $class, $flushed ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:143:     my $old_fh = select $flushed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:144:     $| = 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:145:     select $old_fh;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:134:     $class->_autoflush( \*STDERR );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:142:     my ( $class, $flushed ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:143:     my $old_fh = select $flushed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:144:     $| = 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Executable.pm:145:     select $old_fh;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:147:     my ( $libs, $switches )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:289:     my ( $class, $source ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:290:     my $file     = ${ $source->raw };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:290:     my $file     = ${ $source->raw };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:291:     my @switches = @{ $source->switches || [] };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:291:     my @switches = @{ $source->switches || [] };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:163:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:164:     return $self->{switches} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:292:     my $shebang  = $source->meta->{file}->{shebang};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:138:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:139:     return $self->{meta} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:293:     return unless defined $shebang;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:295:     my $taint = $class->get_taint($shebang);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:281:     my ( $class, $shebang ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:283:       unless defined $shebang
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:296:     push @switches, "-$taint" if defined $taint;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:300:     if (IS_VMS) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:306:     return @switches;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:174:     my ( $class, @switches ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:176:     my $path_sep = $Config{path_sep};
>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:177:     my $path_re  = qr{$path_sep};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:187:     my @libs;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:188:     my @filtered_switches;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:189:     for (@switches) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:190:         if ( !/$path_re/ && m/ ^ ['"]? -I ['"]? (.*?) ['"]? $ /x ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:194:             push @filtered_switches, $_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:190:         if ( !/$path_re/ && m/ ^ ['"]? -I ['"]? (.*?) ['"]? $ /x ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:191:             push @libs, $1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:190:         if ( !/$path_re/ && m/ ^ ['"]? -I ['"]? (.*?) ['"]? $ /x ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:191:             push @libs, $1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:198:     return \@libs, \@filtered_switches;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:155:     my ( $class, $libs, $switches ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:160:     if ( grep { $_ eq "-T" || $_ eq "-t" } @{$switches} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:160:     if ( grep { $_ eq "-T" || $_ eq "-t" } @{$switches} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:160:     if ( grep { $_ eq "-T" || $_ eq "-t" } @{$switches} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:170:     return ( $libs, $switches );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:151:     $class->_run( $source, $libs, $switches );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:229:     my ( $class, $source, $libs, $switches ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:231:     my @command = $class->_get_command_for_switches( $source, $switches )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:252:     my ( $class, $source, $switches ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:253:     my $file    = ${ $source->raw };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:253:     my $file    = ${ $source->raw };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:131:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:132:     return $self->{raw} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:254:     my @args    = @{ $source->test_args || [] };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:254:     my @args    = @{ $source->test_args || [] };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:170:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:171:     return $self->{test_args} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:255:     my $command = $class->get_perl;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:316:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:317:     return $ENV{HARNESS_PERL} if defined $ENV{HARNESS_PERL};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:318:     return Win32::GetShortPathName($^X) if IS_WIN32;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:318:     return Win32::GetShortPathName($^X) if IS_WIN32;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:4:     use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:4:     use strict;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:4:     use strict;
>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:5:     use vars qw|$VERSION $XS_VERSION @ISA @EXPORT @EXPORT_OK|;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:5:     use vars qw|$VERSION $XS_VERSION @ISA @EXPORT @EXPORT_OK|;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:5:     use vars qw|$VERSION $XS_VERSION @ISA @EXPORT @EXPORT_OK|;
>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:7:     require Exporter;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:8:     require DynaLoader;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:10:     @ISA = qw|Exporter DynaLoader|;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:11:     $VERSION = '0.45';
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:12:     $XS_VERSION = $VERSION;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:13:     $VERSION = eval $VERSION;
>> (eval 23)[C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:13]:1: 0.45
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:15:     @EXPORT = qw(
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:31:     @EXPORT_OK = qw(
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:260: my ($cached_os, $cached_desc);
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:560: local $^W = 0;
>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:561: bootstrap Win32;
>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:119:     local(@args) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:120:     local($module) = $args[0];

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:121:     local(@dirs, $file);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:123:     unless ($module) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:130:     croak("Can't load module $module, dynamic loading not available in this perl.\n".

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:137:     my @modparts = split(/::/,$module);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:138:     my $modfname = $modparts[-1];

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:143:     $modfname = &mod2fname(\@modparts) if defined &mod2fname;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:147:     my $modpname = join('/',@modparts);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:149:     print STDERR "DynaLoader::bootstrap for $module ",

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:153:     foreach (@INC) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:156: 	    my $dir = "$_/auto/$modpname";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:159: 	next unless -d $dir; # skip over uninteresting directories

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:156: 	    my $dir = "$_/auto/$modpname";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:159: 	next unless -d $dir; # skip over uninteresting directories

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:156: 	    my $dir = "$_/auto/$modpname";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:159: 	next unless -d $dir; # skip over uninteresting directories

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:162: 	my $try =  "$dir/$modfname.$dl_dlext";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:163: 	last if $file = ($do_expand) ? dl_expandspec($try) : ((-f $try) && $try);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:169:     $file = dl_findfile(map("-L$_",@dirs,@INC), $modfname) unless $file;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:171:     croak("Can't locate loadable object for module $module in \@INC (\@INC contains: @INC)")

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:175:     my $bootname = "boot_$module";

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:176:     $bootname =~ s/\W/_/g;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:177:     @dl_require_symbols = ($bootname);

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:182:     my $bs = $file;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:183:     $bs =~ s/(\.\w+)?(;\d*)?$/\.bs/; # look for .bs 'beside' the library

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:184:     if (-s $bs) { # only read file if it's not empty

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:190:     my $boot_symbol_ref;

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:201:     my $libref = dl_load_file($file, $module->dl_load_flags) or

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:42: sub dl_load_flags { 0x00 }

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:204:     push(@dl_librefs,$libref);  # record loaded object

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:206:     my @unresolved = dl_undef_symbols();

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:207:     if (@unresolved) {

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:212:     $boot_symbol_ref = dl_find_symbol($libref, $bootname) or

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:215:     push(@dl_modules, $module); # record loaded module

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:217:   boot:

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:222: 	push(@dl_shared_objects, $file); # record files loaded

>> C:/CPANTesters/Perl5.12.4/lib/DynaLoader.pm:224:     &$xs(@args);

>> C:/CPANTesters/Perl5.12.4/site/lib/Win32.pm:563: 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:318:     return Win32::GetShortPathName($^X) if IS_WIN32;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:318:     return Win32::GetShortPathName($^X) if IS_WIN32;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:259:     my @command = ( $command, @{$switches}, $file, @args );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:259:     my @command = ( $command, @{$switches}, $file, @args );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:260:     return @command;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:234:     my ( $setup, $teardown ) = $class->_iterator_hooks( $source, $libs );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:202:     my ( $class, $source, $libs ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:211:     };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:215:     my $previous = $ENV{PERL5LIB};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:223:     };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:225:     return ( $setup, $teardown );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:236:     return $class->_create_iterator( $source, \@command, $setup, $teardown );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:240:     my ( $class, $source, $command, $setup, $teardown ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:242:     return TAP::Parser::Iterator::Process->new(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:156:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Source.pm:157:     return $self->{merge} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:118:     my ( $self, $args ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:120:     my @command = @{ delete $args->{command} || [] }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:120:     my @command = @{ delete $args->{command} || [] }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:123:     $self->{command} = [@command];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:126:     my $chunk_size = delete $args->{_chunk_size} || 65536;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:128:     my $merge = delete $args->{merge};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:129:     my ( $pid, $err, $sel );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:131:     if ( my $setup = delete $args->{setup} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:132:         $setup->(@command);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:205:         if ( @{$libs} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:205:         if ( @{$libs} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:207:                 $Config{path_sep}, grep {defined} @{$libs},
>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:207:                 $Config{path_sep}, grep {defined} @{$libs},
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:206:             $ENV{PERL5LIB} = join(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:206:             $ENV{PERL5LIB} = join(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:206:             $ENV{PERL5LIB} = join(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:135:     my $out = IO::Handle->new;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:311:     my $class = ref($_[0]) || $_[0] || "IO::Handle";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:312:     @_ == 1 or croak "usage: new $class";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:313:     my $io = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:314:     bless $io, $class;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:137:     if ( $self->_use_open3 ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:95:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:96:     return unless $Config{d_fork} || $IS_WIN32;
>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:56:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:59:     return $self->{$key} if exists $self->{$key};

>> C:/CPANTesters/Perl5.12.4/lib/Config.pm:61:     return $self->fetch_string($key);

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1219:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1221:     my $value;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1222:     $value = _fetch_string(@_)

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:44:     return 0 if $ENV{ACTIVEPERL_CONFIG_DISABLE};

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:47: 	local *_;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:47: 	local *_;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:48: 	require ActiveState::Path;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:51:     my $key = shift;

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:53:     if (exists $ENV{"ACTIVEPERL_CONFIG_\U$key"}) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:58:     if (exists $OVERRIDE{$key}) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:63:     if ($key eq "make" && $^O eq "MSWin32") {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:87:     if ($key eq "make" && ($^O eq "solaris" || $^O eq "hpux")) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:94:     if ($COMPILER_ENV{$key} && !$compiler_env_initialized++) {

>> C:/CPANTesters/Perl5.12.4/lib/ActivePerl/Config.pm:304:     return 0;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1229:     my($self, $key) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1231:     my $quote_type = "'";

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1232:     my $marker = "$key=";

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1235:     my $start = index($Config_SH_expanded, "\n$marker$quote_type");

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1237:     if ($start == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1243:     return undef if $start == -1;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1245:     $start += length($key) + 3;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1247:     my $value = substr($Config_SH_expanded, $start,

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1255:     if ($quote_type eq '"') {

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1261:     $value = undef if $value eq 'undef';

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1262:     return $value;

>> C:/CPANTesters/Perl5.12.4/lib/Config_heavy.pl:1225:     return $self->{$key} = $value; # cache it

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:97:     for my $module (qw( IPC::Open3 IO::Select )) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98:         eval "use $module";
>> (eval 24)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98]:2: ;>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:3: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:4: no strict 'refs'; # because users pass me bareword filehandles

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:4: no strict 'refs'; # because users pass me bareword filehandles

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:4: no strict 'refs'; # because users pass me bareword filehandles

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:40:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:41:     $^H &= ~ (@_ ? bits(@_) : $default_bits);

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:19:     my $bits = 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:20:     my @wrong;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:21:     foreach my $s (@_) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:22: 	push @wrong, $s unless exists $bitmask{$s};

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:23:         $bits |= $bitmask{$s} || 0;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:25:     if (@wrong) {

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:29:     $bits;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:9: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:9: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:9: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:10: use Symbol qw(gensym qualify);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:10: use Symbol qw(gensym qualify);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:10: use Symbol qw(gensym qualify);

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:49:       foreach (@$exports, @{"$pkg\::EXPORT_OK"});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:48:     s/^&//, $export_cache->{$_} = 1
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:184: use constant DO_SPAWN => $^O eq 'os2' || $^O eq 'MSWin32';

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:184: use constant DO_SPAWN => $^O eq 'os2' || $^O eq 'MSWin32';

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:184: use constant DO_SPAWN => $^O eq 'os2' || $^O eq 'MSWin32';

>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:43:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:44:     return unless @_;			# Ignore 'use constant;'
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:45:     my $constants;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:46:     my $multiple  = ref $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:47:     my $pkg = caller;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:48:     my $flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:49:     my $symtab;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:51:     if (_CAN_PCS) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:53: 	$symtab = \%{$pkg . '::'};
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:56:     if ( $multiple ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:63: 	unless (defined $_[0]) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:67: 	$constants->{+shift} = undef;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:70:     foreach my $name ( keys %$constants ) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:72: 	if ($name =~ $normal_constant_name and !$forbidden{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:114: 	    no strict 'refs';
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:115: 	    my $full_name = "${pkg}::$name";
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:116: 	    $declared{$full_name}++;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:117: 	    if ($multiple || @_ == 1) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:118: 		my $scalar = $multiple ? $constants->{$name} : $_[0];
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:123: 		utf8::is_utf8 $name and utf8::encode $name
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:128: 		if (_CAN_PCS && $symtab && !exists $symtab->{$name}) {
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:133: 		    Internals::SvREADONLY($scalar, 1);
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:134: 		    $symtab->{$name} = \$scalar;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:135: 		    ++$flush_mro;
>> C:/CPANTesters/Perl5.12.4/site/lib/constant.pm:148:     mro::method_changed_in($pkg) if _CAN_PCS && $flush_mro;
>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:5: our ($VERSION, @ISA, @EXPORT);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:7: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:12: $VERSION	= 1.05;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:13: @ISA		= qw(Exporter);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:14: @EXPORT		= qw(open3);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:150: our $Me = 'open3 (bug)';	# you should never see this, it's always localized

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:376: 1; # so require is happy

>> (eval 24)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98]:2: ;>> (eval 24)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98]:2: ;>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:99:         return if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98:         eval "use $module";
>> (eval 25)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98]:2: ;>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:9: use     strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:9: use     strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:9: use     strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:10: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:10: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:10: use warnings::register;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:37:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:38:     my $package = (caller(0))[0];

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:39:     if (! defined $warnings::Bits{$package}) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:40:         $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:41:         vec($warnings::Bits{'all'}, $warnings::LAST_BIT, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:42:         $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:43: 	foreach my $k (keys %warnings::Bits) {

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:44: 	    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:46:         $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:28:     my ($bit) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:29:     my $mask = "";

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:31:     vec($mask, $bit, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:32:     return $mask;

>> C:/CPANTesters/Perl5.12.4/lib/warnings/register.pm:47:         vec($warnings::DeadBits{'all'}, $warnings::LAST_BIT++, 1) = 1;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:11: use     vars qw($VERSION @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:11: use     vars qw($VERSION @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:11: use     vars qw($VERSION @ISA);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:11:     my $callpack = caller;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:12:     my ($pack, @imports) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:13:     my ($sym, $ch);

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:14:     foreach (@imports) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:15:         if (($ch, $sym) = /^([\$\@\%\*\&])(.+)/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:16: 	    if ($sym =~ /\W/) {

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:28: 	    $sym = "${callpack}::$sym" unless $sym =~ /::/;

>> C:/CPANTesters/Perl5.12.4/lib/vars.pm:35: 		 : do {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:12: require Exporter;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:14: $VERSION = "1.17";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:16: @ISA = qw(Exporter); # This is only so we can do version checking

>> C:/CPANTesters/Perl5.12.4/lib/IO/Select.pm:235: 1;

>> (eval 25)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98]:2: ;>> (eval 25)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:98]:2: ;>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:99:         return if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:101:     return 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:140:         my $xclose = \&IPC::Open3::xclose;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:141:         local $^W;    # no warnings
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:147:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:151:         if ($IS_WIN32) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:152:             $err = $merge ? '' : '>&STDERR';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:153:             eval {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:154:                 $pid = open3(
>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:330:     if (@_ < 4) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:334:     return _open3 'open3', scalar caller, @_

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:187:     local $Me = shift;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:188:     my($package, $dad_wtr, $dad_rdr, $dad_err, @cmd) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:189:     my($dup_wtr, $dup_rdr, $dup_err, $kidpid);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:191:     if (@cmd > 1 and $cmd[0] eq '-') {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:199:     unless (eval  {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:200: 	$dad_wtr = $_[1] = gensym unless defined $dad_wtr && length $dad_wtr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:201: 	$dad_rdr = $_[2] = gensym unless defined $dad_rdr && length $dad_rdr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:202: 	1; }) 

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:209:     $dad_err ||= $dad_rdr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:211:     $dup_wtr = ($dad_wtr =~ s/^[<>]&//);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:212:     $dup_rdr = ($dad_rdr =~ s/^[<>]&//);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:213:     $dup_err = ($dad_err =~ s/^[<>]&//);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:216:     $dad_wtr = qualify $dad_wtr, $package unless fh_is_fd($dad_wtr);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:176:     return $_[0] =~ /\A=?(\d+)\z/;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:119: 	my $pkg;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:121: 	if ($name =~ /^(([^a-z])|(\^[a-z_]+))\z/i || $global{$name}) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:123: 	    $name =~ s/^\^([a-z_])/'qq(\c'.$1.')'/eei;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:124: 	    $pkg = "main";

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:129: 	$name = $pkg . "::" . $name;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:217:     $dad_rdr = qualify $dad_rdr, $package unless fh_is_fd($dad_rdr);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:176:     return $_[0] =~ /\A=?(\d+)\z/;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:218:     $dad_err = qualify $dad_err, $package unless fh_is_fd($dad_err);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:176:     return $_[0] =~ /\A=?(\d+)\z/;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:119: 	my $pkg;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:121: 	if ($name =~ /^(([^a-z])|(\^[a-z_]+))\z/i || $global{$name}) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:123: 	    $name =~ s/^\^([a-z_])/'qq(\c'.$1.')'/eei;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:124: 	    $pkg = "main";

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:129: 	$name = $pkg . "::" . $name;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:220:     my $kid_rdr = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:221:     my $kid_wtr = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:222:     my $kid_err = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:224:     xpipe $kid_rdr, $dad_wtr if !$dup_wtr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:225:     xpipe $dad_rdr, $kid_wtr if !$dup_rdr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:161:     pipe $_[0], $_[1] or croak "$Me: pipe($_[0], $_[1]) failed: $!";

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:226:     xpipe $dad_err, $kid_err if !$dup_err && $dad_err ne $dad_rdr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:228:     $kidpid = DO_SPAWN ? -1 : xfork;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:229:     if ($kidpid == 0) {		# Kid

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:279: 	my @close;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:280: 	if ($dup_wtr) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:281: 	  $kid_rdr = \*{$dad_wtr};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:281: 	  $kid_rdr = \*{$dad_wtr};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:282: 	  push @close, $kid_rdr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:286: 	if ($dup_rdr) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:290: 	  push @close, \*{$dad_rdr}, $kid_wtr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:290: 	  push @close, \*{$dad_rdr}, $kid_wtr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:292: 	if ($dad_rdr ne $dad_err) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:293: 	    if ($dup_err) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:294: 	      $kid_err = \*{$dad_err};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:294: 	      $kid_err = \*{$dad_err};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:295: 	      push @close, $kid_err;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:302: 	require IO::Pipe;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:9: use 5.006_001;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:9: use 5.006_001;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:9: use 5.006_001;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:11: use IO::Handle;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:11: use IO::Handle;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:11: use IO::Handle;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:12: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:12: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:12: use strict;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:35:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/strict.pm:36:     $^H |= @_ ? bits(@_) : $default_bits;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:14: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:14: use Carp;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:14: use Carp;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:57:                  foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:15: use Symbol;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:15: use Symbol;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:15: use Symbol;

>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:29:   my $pkg = shift;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:30:   my $callpkg = caller($ExportLevel);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:32:   if ($pkg eq "Exporter" and @_ and $_[0] eq "import") {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:38:   my $exports = \@{"$pkg\::EXPORT"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:41:   my $fail = ${$pkg . '::'}{EXPORT_FAIL} && \@{"$pkg\::EXPORT_FAIL"};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:42:   return export $pkg, $callpkg, @_
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:44:   my $export_cache = ($Cache{$pkg} ||= {});
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:45:   my $args = @_ or @_ = @$exports;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:47:   if ($args and not %$export_cache) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:51:   my $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:54:   if ($args or $fail) {
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:60:       foreach (@_);
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:62:   return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:64: 	sub {require Carp; &Carp::carp} if not $SIG{__WARN__};
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/site/lib/Exporter.pm:66:   *{"$callpkg\::$_"} = \&{"$pkg\::$_"} foreach @_;
>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:13: our($VERSION);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:17: $VERSION = "1.13";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:41: my $do_spawn = $^O eq 'os2' || $^O eq 'MSWin32';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:143: our(@ISA);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:145: @ISA = qw(IO::Handle);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Pipe.pm:157: 1;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:303: 	$kidpid = eval {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:304: 	    spawn_with_handles( [ { mode => 'r',

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:338:     my $fds = shift;		# Fields: handle, mode, open_as

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:339:     my $close_in_child = shift;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:340:     my ($fd, $pid, @saved_fh, $saved, %saved, @errs);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:341:     require Fcntl;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:343:     foreach $fd (@$fds) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:344: 	$fd->{tmp_copy} = IO::Handle->new_from_fd($fd->{handle}, $fd->{mode});

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:318:     my $class = ref($_[0]) || $_[0] || "IO::Handle";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:319:     @_ == 3 or croak "usage: new_from_fd $class FD, MODE";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:320:     my $io = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:321:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:322:     IO::Handle::fdopen($io, @_)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:324:     bless $io, $class;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:345: 	$saved{fileno $fd->{handle}} = $fd->{tmp_copy};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:344: 	$fd->{tmp_copy} = IO::Handle->new_from_fd($fd->{handle}, $fd->{mode});

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:318:     my $class = ref($_[0]) || $_[0] || "IO::Handle";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:319:     @_ == 3 or croak "usage: new_from_fd $class FD, MODE";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:320:     my $io = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:321:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:322:     IO::Handle::fdopen($io, @_)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:324:     bless $io, $class;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:345: 	$saved{fileno $fd->{handle}} = $fd->{tmp_copy};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:344: 	$fd->{tmp_copy} = IO::Handle->new_from_fd($fd->{handle}, $fd->{mode});

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:318:     my $class = ref($_[0]) || $_[0] || "IO::Handle";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:319:     @_ == 3 or croak "usage: new_from_fd $class FD, MODE";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:320:     my $io = gensym;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:101:     my $name = "GEN" . $genseq++;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:102:     my $ref = \*{$genpkg . $name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:103:     delete $$genpkg{$name};

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:104:     $ref;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:321:     shift;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:322:     IO::Handle::fdopen($io, @_)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:324:     bless $io, $class;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:345: 	$saved{fileno $fd->{handle}} = $fd->{tmp_copy};

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:347:     foreach $fd (@$fds) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:349: 	    unless eval { $fd->{handle}->isa('IO::Handle') } ;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:349: 	    unless eval { $fd->{handle}->isa('IO::Handle') } ;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:352: 	$fd->{handle}->fdopen($saved{fileno $fd->{open_as}} || $fd->{open_as},

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:349: 	    unless eval { $fd->{handle}->isa('IO::Handle') } ;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:349: 	    unless eval { $fd->{handle}->isa('IO::Handle') } ;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:352: 	$fd->{handle}->fdopen($saved{fileno $fd->{open_as}} || $fd->{open_as},

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:349: 	    unless eval { $fd->{handle}->isa('IO::Handle') } ;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:349: 	    unless eval { $fd->{handle}->isa('IO::Handle') } ;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:352: 	$fd->{handle}->fdopen($saved{fileno $fd->{open_as}} || $fd->{open_as},

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:355:     unless ($^O eq 'MSWin32') {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:363:     unless (@errs) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:364: 	$pid = eval { system 1, @_ }; # 1 == P_NOWAIT

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:364: 	$pid = eval { system 1, @_ }; # 1 == P_NOWAIT

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:365: 	push @errs, "IO::Pipe: Can't spawn-NOWAIT: $!" if !$pid || $pid < 0;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:368:     foreach $fd (@$fds) {

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:369: 	$fd->{handle}->fdopen($fd->{tmp_copy}, $fd->{mode});

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:370: 	$fd->{tmp_copy}->close or croak "Can't close: $!";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:370:     @_ == 1 or croak 'usage: $io->close()';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:371:     my($io) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:373:     close($io);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:369: 	$fd->{handle}->fdopen($fd->{tmp_copy}, $fd->{mode});

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:370: 	$fd->{tmp_copy}->close or croak "Can't close: $!";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:370:     @_ == 1 or croak 'usage: $io->close()';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:371:     my($io) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:373:     close($io);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:369: 	$fd->{handle}->fdopen($fd->{tmp_copy}, $fd->{mode});

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:351:     @_ == 3 or croak 'usage: $io->fdopen(FD, MODE)';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:352:     my ($io, $fd, $mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:353:     local(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:355:     if (ref($fd) && "".$fd =~ /GLOB\(/o) {

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:357: 	my $n = qualify(*GLOB);

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:117:     my ($name) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:118:     if (!ref($name) && index($name, '::') == -1 && index($name, "'") == -1) {

>> C:/CPANTesters/Perl5.12.4/lib/Symbol.pm:131:     $name;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:358: 	*GLOB = *{*$fd};

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:359: 	$fd =  $n;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:365:     open($io, _open_mode_string($mode) . '&' . $fd)

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:341:     my ($mode) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:342:     $mode =~ /^\+?(<|>>?)$/

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:347:     $mode;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:370: 	$fd->{tmp_copy}->close or croak "Can't close: $!";

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:370:     @_ == 1 or croak 'usage: $io->close()';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:371:     my($io) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:373:     close($io);

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:372:     croak join "\n", @errs if @errs;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:373:     return $pid;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:315: 	die "$Me: $@" if $@;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:318:     xclose $kid_rdr if !$dup_wtr;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:319:     xclose $kid_wtr if !$dup_rdr;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:143:             my $fh = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:145:             return if ( fileno($fh) == fileno(STDIN) );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:146:             $xclose->($fh);
>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:172:     close $_[0] or croak "$Me: close($_[0]) failed: $!";

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:320:     xclose $kid_err if !$dup_err && $dad_rdr ne $dad_err;

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:323:     xclose $dad_wtr if $dup_wtr;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:143:             my $fh = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:145:             return if ( fileno($fh) == fileno(STDIN) );
>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:325:     select((select($dad_wtr), $| = 1)[0]); # unbuffer pipe

>> C:/CPANTesters/Perl5.12.4/lib/IPC/Open3.pm:326:     $kidpid;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:159:             die "Could not execute (@command): $@" if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:160:             if ( $] >= 5.006 ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:163:                 eval 'binmode($out, ":crlf")';
>> (eval 26)[C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:163]:1: binmode($out, ":crlf")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:181:     $self->{out}        = $out;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:182:     $self->{err}        = $err;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:183:     $self->{sel}        = $sel;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:184:     $self->{pid}        = $pid;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:185:     $self->{exit}       = undef;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:186:     $self->{chunk_size} = $chunk_size;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:188:     if ( my $teardown = delete $args->{teardown} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:191:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:194:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/IteratorFactory.pm:221:     return $iterator;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:472:         unless ($iterator) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:477:         while ( my ( $k, $v ) = each %initialize ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:478:             $self->{$k} = 'ARRAY' eq ref $v ? [] : $v;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:481:         $self->version($version) if $version;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:482:         $self->_iterator($iterator);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:483:         $self->_spool($spool);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:484:         $self->ignore_exit($ignore_exit);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1061: sub ignore_exit { shift->pragma( 'ignore_exit', @_ ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:920:     my ( $self, $pragma ) = splice @_, 0, 2;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:922:     return $self->{pragma}->{$pragma} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:924:     if ( my $state = shift ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:928:         delete $self->{pragma}->{$pragma};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:931:     return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:486:         return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:781:     $self->_make_callback( 'made_parser', $parser, $job->as_array_ref );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:93:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:94:     return [ $self->filename, $self->description, $self->{context} ||= [] ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:82: sub filename    { shift->{filename} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:83: sub description { shift->{description} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:105:     my $self  = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:106:     my $event = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:108:     my $cb = $self->_callback_for($event);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:100:     my ( $self, $event ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:101:     return $self->{code_for}{$event};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:109:     return unless defined $cb;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:782:     my $session = $self->formatter->open_test( $job->description, $parser );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:83: sub description { shift->{description} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:40:     my ( $self, $test, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:42:     my $session = TAP::Formatter::File::Session->new(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:62:     my ( $self, $arg_for ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:63:     $arg_for ||= {};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:65:     $self->SUPER::_initialize($arg_for);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:56:     my ( $self, $arg_for, $ok_callback ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:58:     my %ok_map = map { $_ => 1 } @$ok_callback;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:60:     $self->{ok_callbacks} = \%ok_map;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:62:     if ( my $cb = delete $arg_for->{callbacks} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:68:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:66:     my %arg_for = %$arg_for;    # force a shallow copy
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:68:     for my $name (@ACCESSOR) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:69:         $self->{$name} = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:69:         $self->{$name} = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:69:         $self->{$name} = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:69:         $self->{$name} = delete $arg_for{$name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:72:     if ( !defined $self->show_count ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:73:         $self->{show_count} = 1;    # defaults to true
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:75:     if ( $self->show_count ) {      # but may be a damned lie!
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:76:         $self->{show_count} = $self->_should_show_count;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:115:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:117:          !$self->formatter->verbose
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:99: sub verbose      { shift->verbosity >= 1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:79:     if ( my @props = sort keys %arg_for ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:84:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:49:     $session->header;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:106: sub header { }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File.pm:51:     return $session;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:784:     return ( $parser, $session );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:580:         while ( defined( my $result = $parser->next ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:311:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:312:     return ( $self->{_iter} ||= $self->_iter )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1360:     my $self        = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1361:     my $iterator    = $self->_iterator;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1362:     my $grammar     = $self->_grammar;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1348:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1349:     return $self->{_grammar} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1351:     return $self->{_grammar} ||= $self->make_grammar(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:363: sub make_grammar          { shift->grammar_class->new(@_); }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:66:     my ( $self, $args ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:67:     $self->{iterator} = $args->{iterator};    # TODO: accessor
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:68:     $self->{iterator} ||= $args->{stream};    # deprecated
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:69:     $self->{parser} = $args->{parser};        # TODO: accessor
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:70:     $self->set_version( $args->{version} || 12 );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:244:     my $self    = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:245:     my $version = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:247:     if ( my $language = $language_for{$version} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:248:         $self->{version} = $version;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:249:         $self->{tokens}  = $language->{tokens};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:251:         if ( my $setup = $language->{setup} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:255:         $self->_order_tokens;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:265:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:267:     my %copy = %{ $self->{tokens} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:267:     my %copy = %{ $self->{tokens} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:269:       map { delete $copy{$_} } qw( simple_test test comment plan );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:268:     my @ordered_tokens = grep {defined}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:270:     push @ordered_tokens, values %copy;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:272:     $self->{ordered_tokens} = \@ordered_tokens;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:71:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1363:     my $spool       = $self->_spool;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1364:     my $state       = 'INIT';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1365:     my $state_table = $self->_make_state_table;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1132:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1133:     my %states;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1134:     my %planned_todo = ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1167:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1234:     );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1311:             plan => { act  => sub { }, continue => 'UNPLANNED' },
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1317:     for my $name ( keys %states ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1320:         my $st = { %state_globals, %{ $states{$name} } };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1323:         for my $next ( sort keys %{$st} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1324:             if ( my $default = $state_defaults{$next} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1325:                 for my $def ( sort keys %{$default} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1326:                     $st->{$next}->{$def} ||= $default->{$def};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1332:         $states{$name} = $st;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1335:     return \%states;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1367:     $self->start_time( $self->get_time );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:119: sub get_time { return time() }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1394:     };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1402:     };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1407:     if ( $self->_has_callbacks ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:95:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:96:     return keys %{ $self->{code_for} } != 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:96:     return keys %{ $self->{code_for} } != 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1452:         };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:287:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:289:     my $line = $self->{iterator}->next;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:68:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:69:     my $line = $self->next_raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:310:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:311:     return ( $self->{_next} ||= $self->_next )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:234:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:236:     if ( my $out = $self->{out} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:237:         if ( my $sel = $self->{sel} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:298:             };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:292:                 if ( defined( my $line = <$out> ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:293:                     chomp $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:294:                     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:75:     if ( defined($line) and $line =~ /^\s*not\s*$/ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:79:     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:290:     unless ( defined $line ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:295:     my $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:297:     for my $token_data ( @{ $self->{ordered_tokens} } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:297:     for my $token_data ( @{ $self->{ordered_tokens} } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:299:             my $handler = $token_data->{handler};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:300:             $token = $self->$handler($line);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:94:                 my ( $self, $line ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:95:                 my ( $tests_planned, $tail ) = ( $1, $2 );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:96:                 my $explanation = undef;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:97:                 my $skip        = '';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:99:                 if ( $tail =~ /^todo((?:\s+\d+)+)/ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:116:                 $explanation = '' unless defined $explanation;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:118:                 return $self->_make_plan_token(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:384:     my ( $self, $line, $tests_planned, $directive, $explanation, $todo ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:386:     if (   $directive eq 'SKIP'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:395:         type          => 'plan',
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:486:     my $data = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:488:     return '' unless defined $data;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:490:     $data =~ s/^\s+//;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:491:     $data =~ s/\s+$//;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:492:     return $data;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:301:             last;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:305:     $token = $self->_make_unknown_token($line) unless $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:307:     return $self->{parser}->make_result($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:364: sub make_result           { shift->result_factory_class->make_result(@_); }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:66:     my ( $proto, $token ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:67:     my $type = $token->{type};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:68:     return $proto->class_for($type)->new($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:113:     my ( $class, $type ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:116:     return $CLASS_FOR{$type} if exists $CLASS_FOR{$type};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:68:     my ( $self, $token ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:69:     if ($token) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:74:         @{$self}{ keys %$token } = values %$token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:74:         @{$self}{ keys %$token } = values %$token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:76:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1439:             $self->_add_error($@) if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1441:             if ( defined $result ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1442:                 $result = $next_state->($result);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1371:         my $token = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1372:         my $type  = $token->type;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1374:             my $state_spec = $state_table->{$state}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1373:         TRANS: {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1377:             if ( my $next = $state_spec->{$type} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1378:                 if ( my $act = $next->{act} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1379:                     $act->($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1173:                 my ($plan) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1174:                 $self->tests_planned( $plan->tests_planned );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:73: sub tests_planned { shift->{tests_planned} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1175:                 $self->plan( $plan->plan );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:60: sub plan { '1..' . shift->{tests_planned} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1176:                 if ( $plan->has_skip ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:246: sub has_skip { 'SKIP' eq ( shift->{directive} || '' ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1181:                 $planned_todo{$_}++ for @{ $plan->todo_list };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1181:                 $planned_todo{$_}++ for @{ $plan->todo_list };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1181:                 $planned_todo{$_}++ for @{ $plan->todo_list };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Plan.pm:118: sub todo_list { shift->{todo_list} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1381:                 if ( my $cont = $next->{continue} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1386:                     $state = $goto;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1393:         return $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1445:                 print {$spool} $result->raw, "\n" if $spool;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1451:             return $result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:581:             $session->result($result);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:40:     my $self   = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:41:     my $result = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:43:     my $parser    = $self->parser;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:44:     my $formatter = $self->formatter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:46:     if ( $result->is_bailout ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:54:     if (!$formatter->quiet
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:100: sub quiet        { shift->verbosity <= -1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:99: sub verbose      { shift->verbosity >= 1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:61:         $self->{results} .= $self->_format_for_output($result) . "\n";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:123:     my ( $self, $result ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:124:     return $self->formatter->normalize ? $result->as_string : $result->raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:148: sub raw { shift->{raw} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:582:             if ( $result->is_bailout ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:311:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:312:     return ( $self->{_iter} ||= $self->_iter )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:287:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:289:     my $line = $self->{iterator}->next;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:68:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:69:     my $line = $self->next_raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:310:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:311:     return ( $self->{_next} ||= $self->_next )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:292:                 if ( defined( my $line = <$out> ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:293:                     chomp $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:294:                     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:75:     if ( defined($line) and $line =~ /^\s*not\s*$/ ) {

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:79:     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:290:     unless ( defined $line ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:295:     my $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:297:     for my $token_data ( @{ $self->{ordered_tokens} } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:297:     for my $token_data ( @{ $self->{ordered_tokens} } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:299:             my $handler = $token_data->{handler};
#   Failed test 'error parsing non-existent does_not_exist.xml'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:300:             $token = $self->$handler($line);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:131:                 my ( $self, $line ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:132:                 my ( $ok, $num, $desc ) = ( $1, $2, $3 );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:134:                 return $self->_make_test_token(
#   at t/02parse-191.t line 38.
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:405:     my ( $self, $line, $ok, $num, $desc, $dir, $explanation ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:407:         ok          => $ok,
#                   'Could not create file parser context for file "does_not_exist.xml": No error at t/02parse-191.t line 37.
# '
#     doesn't match '(?-xism:\ACould not create file parser context for file "does_not_exist\.xml": No\ such\ file\ or\ directory)'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:486:     my $data = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:488:     return '' unless defined $data;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:490:     $data =~ s/^\s+//;
# Looks like you failed 1 test of 1.
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:491:     $data =~ s/\s+$//;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:492:     return $data;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:486:     my $data = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:488:     return '' unless defined $data;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:301:             last;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:305:     $token = $self->_make_unknown_token($line) unless $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:307:     return $self->{parser}->make_result($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:364: sub make_result           { shift->result_factory_class->make_result(@_); }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:66:     my ( $proto, $token ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:67:     my $type = $token->{type};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:68:     return $proto->class_for($type)->new($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:113:     my ( $class, $type ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:116:     return $CLASS_FOR{$type} if exists $CLASS_FOR{$type};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:68:     my ( $self, $token ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:69:     if ($token) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:74:         @{$self}{ keys %$token } = values %$token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:74:         @{$self}{ keys %$token } = values %$token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:76:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1439:             $self->_add_error($@) if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1441:             if ( defined $result ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1442:                 $result = $next_state->($result);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1371:         my $token = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1372:         my $type  = $token->type;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1374:             my $state_spec = $state_table->{$state}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1373:         TRANS: {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1377:             if ( my $next = $state_spec->{$type} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1378:                 if ( my $act = $next->{act} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1379:                     $act->($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1186:                 my ($test) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1188:                 my ( $number, $tests_run )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:64: sub number { shift->{test_num} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1192:                 if ( defined $number && delete $planned_todo{$number} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1196:                 my $has_todo = $test->has_todo;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:232: sub has_todo { 'TODO' eq ( shift->{directive} || '' ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1198:                 $self->in_todo($has_todo);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1199:                 if ( defined( my $tests_planned = $self->tests_planned ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1200:                     if ( $tests_run > $tests_planned ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1205:                 if ( defined $number ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1206:                     if ( $number != $tests_run ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1216:                 push @{ $self->{todo} } => $number if $has_todo;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1217:                 push @{ $self->{todo_passed} } => $number
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:183:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:184:     return $self->has_todo && $self->is_actual_ok;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:232: sub has_todo { 'TODO' eq ( shift->{directive} || '' ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1219:                 push @{ $self->{skipped} } => $number
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:246: sub has_skip { 'SKIP' eq ( shift->{directive} || '' ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1222:                 push @{ $self->{ $test->is_ok ? 'passed' : 'failed' } } =>
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1222:                 push @{ $self->{ $test->is_ok ? 'passed' : 'failed' } } =>
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:129:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:131:     return if $self->is_unplanned;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:268:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:269:     return ( $self->{unplanned} || '' ) unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:134:     return $self->has_todo ? 1 : $self->ok !~ /not/;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:232: sub has_todo { 'TODO' eq ( shift->{directive} || '' ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:51: sub ok { shift->{ok} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1225:                     $self->{
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1226:                         $test->is_actual_ok
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:149:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result/Test.pm:150:     return $self->{ok} !~ /not/;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1381:                 if ( my $cont = $next->{continue} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1386:                     $state = $goto;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1393:         return $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1445:                 print {$spool} $result->raw, "\n" if $spool;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1451:             return $result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:581:             $session->result($result);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:40:     my $self   = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:41:     my $result = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:43:     my $parser    = $self->parser;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:44:     my $formatter = $self->formatter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:46:     if ( $result->is_bailout ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:54:     if (!$formatter->quiet
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:100: sub quiet        { shift->verbosity <= -1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:99: sub verbose      { shift->verbosity >= 1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:61:         $self->{results} .= $self->_format_for_output($result) . "\n";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:123:     my ( $self, $result ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:124:     return $self->formatter->normalize ? $result->as_string : $result->raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:148: sub raw { shift->{raw} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:582:             if ( $result->is_bailout ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:311:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:312:     return ( $self->{_iter} ||= $self->_iter )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:287:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:289:     my $line = $self->{iterator}->next;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:68:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:69:     my $line = $self->next_raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:310:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:311:     return ( $self->{_next} ||= $self->_next )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:292:                 if ( defined( my $line = <$out> ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:293:                     chomp $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:294:                     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:75:     if ( defined($line) and $line =~ /^\s*not\s*$/ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:79:     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:290:     unless ( defined $line ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:295:     my $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:297:     for my $token_data ( @{ $self->{ordered_tokens} } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:297:     for my $token_data ( @{ $self->{ordered_tokens} } ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:298:         if ( $line =~ $token_data->{syntax} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:305:     $token = $self->_make_unknown_token($line) unless $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:418:     my ( $self, $line ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:420:         raw  => $line,
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:307:     return $self->{parser}->make_result($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:364: sub make_result           { shift->result_factory_class->make_result(@_); }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:66:     my ( $proto, $token ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:67:     my $type = $token->{type};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:68:     return $proto->class_for($type)->new($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:113:     my ( $class, $type ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/ResultFactory.pm:116:     return $CLASS_FOR{$type} if exists $CLASS_FOR{$type};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:56:     my $class = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:57:     my $self = bless {}, $class;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:58:     return $self->_initialize(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:68:     my ( $self, $token ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:69:     if ($token) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:74:         @{$self}{ keys %$token } = values %$token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:74:         @{$self}{ keys %$token } = values %$token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:76:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1439:             $self->_add_error($@) if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1441:             if ( defined $result ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1442:                 $result = $next_state->($result);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1371:         my $token = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1372:         my $type  = $token->type;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1374:             my $state_spec = $state_table->{$state}
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1373:         TRANS: {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1377:             if ( my $next = $state_spec->{$type} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1378:                 if ( my $act = $next->{act} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1379:                     $act->($token);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1150:                 my $unk = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1151:                 if ( $self->pragma('strict') ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:920:     my ( $self, $pragma ) = splice @_, 0, 2;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:922:     return $self->{pragma}->{$pragma} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1381:                 if ( my $cont = $next->{continue} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1393:         return $token;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1445:                 print {$spool} $result->raw, "\n" if $spool;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1451:             return $result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:581:             $session->result($result);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:40:     my $self   = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:41:     my $result = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:43:     my $parser    = $self->parser;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:44:     my $formatter = $self->formatter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:46:     if ( $result->is_bailout ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:54:     if (!$formatter->quiet
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:100: sub quiet        { shift->verbosity <= -1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:99: sub verbose      { shift->verbosity >= 1 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:61:         $self->{results} .= $self->_format_for_output($result) . "\n";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:123:     my ( $self, $result ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:124:     return $self->formatter->normalize ? $result->as_string : $result->raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:148: sub raw { shift->{raw} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:582:             if ( $result->is_bailout ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:17:         *$method = sub { return $token eq shift->type };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Result.pm:160: sub type { shift->{type} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:311:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:312:     return ( $self->{_iter} ||= $self->_iter )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1438:             my $result = eval { $grammar->tokenize };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:287:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:289:     my $line = $self->{iterator}->next;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:68:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:69:     my $line = $self->next_raw;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:310:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:311:     return ( $self->{_next} ||= $self->_next )->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:292:                 if ( defined( my $line = <$out> ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:296:                 $self->_finish;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:315:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:317:     my $status = $?;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:321:       if $] >= 5.006;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:324:     if ( defined $self->{pid} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:325:         if ( $self->{pid} == waitpid( $self->{pid}, 0 ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:326:             $status = $?;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:330:     ( delete $self->{out} )->close if $self->{out};
>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:370:     @_ == 1 or croak 'usage: $io->close()';

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:371:     my($io) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/IO/Handle.pm:373:     close($io);

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:333:     if ( $self->{sel} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:338:         $status = $?;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:343:     $status = 0 if $IS_WIN32 && $status == -1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:345:     $self->{wait} = $status;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:346:     $self->{exit} = $self->_wait2exit($status);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:87:         *_wait2exit = sub { $_[1] >> 8 };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:348:     if ( my $teardown = $self->{teardown} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:349:         $teardown->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:190:             $teardown->(@command);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:217:         if ( defined $previous ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/SourceHandler/Perl.pm:221:             delete $ENV{PERL5LIB};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:352:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:297:                 return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:75:     if ( defined($line) and $line =~ /^\s*not\s*$/ ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator.pm:79:     return $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:290:     unless ( defined $line ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:291:         delete $self->{parser};    # break circular ref
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Grammar.pm:292:         return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1439:             $self->_add_error($@) if $@;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1441:             if ( defined $result ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1448:                 $result = $end_handler->();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1398:         $self->exit( $iterator->exit );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:231: sub exit { shift->{exit} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1399:         $self->wait( $iterator->wait );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Iterator/Process.pm:230: sub wait { shift->{wait} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1400:         $self->_finish;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1457:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1459:     $self->end_time( $self->get_time );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:119: sub get_time { return time() }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1462:     $self->_iterator(undef);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1463:     $self->_grammar(undef);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1348:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1349:     return $self->{_grammar} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1471:       if $] >= 5.006;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1474:     if ( !$self->plan ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1478:         $self->is_good_plan(1) unless defined $self->is_good_plan;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1480:     if ( $self->tests_run != ( $self->tests_planned || 0 ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1488:     if ( $self->tests_run != ( $self->passed + $self->failed ) ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:798: sub passed { @{ shift->{passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:798: sub passed { @{ shift->{passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1498:     $self->is_good_plan(0) unless defined $self->is_good_plan;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1499:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1401:         return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1451:             return $result;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:591:         $self->finish_parser( $parser, $session );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:795:     my ( $self, $parser, $session ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:797:     $session->close_test;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:72:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:75:     $self->parser(undef);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:77:     my $parser    = $self->parser;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:78:     my $formatter = $self->formatter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:79:     my $pretty    = $formatter->_format_name( $self->name );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:219:     my ( $self, $test ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:220:     my $name = $test;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:221:     my $periods = '.' x ( $self->_longest + 2 - length $test );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:222:     $periods = " $periods ";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:224:     if ( $self->timer ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:229:         return "$name$periods";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:81:     return if $formatter->really_quiet;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:101: sub really_quiet { shift->verbosity <= -2 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:82:     if ( my $skip_all = $parser->skip_all ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1019:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1021:          $self->failed
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:86:         $formatter->_output(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
t/02parse-191.t .. 
1..1
not ok 1 - error parsing non-existent does_not_exist.xml
the error message: Could not create file parser context for file "does_not_exist.xml": No error at t/02parse-191.t line 37.
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/File/Session.pm:88:         $self->_output_test_failure($parser);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:128:     my ( $self, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:129:     my $formatter = $self->formatter;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:18:         *$method = sub { shift->{$method} };
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:130:     return if $formatter->really_quiet;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:101: sub really_quiet { shift->verbosity <= -2 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:132:     my $tests_run     = $parser->tests_run;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:133:     my $tests_planned = $parser->tests_planned;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:135:     my $total
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:140:     my $passed = $parser->passed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:798: sub passed { @{ shift->{passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:798: sub passed { @{ shift->{passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:144:     my $failed = $parser->failed + $total - $tests_run;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:145:     my $exit   = $parser->exit;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:147:     if ( my $exit = $parser->exit ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:148:         my $wstat = $parser->wait;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:149:         my $status = sprintf( "%d (wstat %d, 0x%x)", $exit, $wstat, $wstat );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:150:         $formatter->_failure_output("Dubious, test returned $status\n");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:392:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:394:     $self->_output(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
Dubious, test returned 1 (wstat 256, 0x100)
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:153:     if ( $failed == 0 ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:161:         $formatter->_failure_output("Failed $failed/$total subtests ");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:392:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:394:     $self->_output(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
Failed 1/1 subtests >> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:162:         if ( !$total ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:167:     if ( my $skipped = $parser->skipped ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:901: sub skipped { @{ shift->{skipped} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:901: sub skipped { @{ shift->{skipped} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:174:     if ( my $failed = $parser->todo_passed ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:873: sub todo_passed { @{ shift->{todo_passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:873: sub todo_passed { @{ shift->{todo_passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Session.pm:180:     $formatter->_output("\n");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:798:     $self->_close_spool($parser);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:828:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:829:     my ($parser) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:831:     if ( my $spool_handle = $parser->delete_spool ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1511:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1513:     return delete $self->{_spool};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:836:     return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:800:     return $parser;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:592:         $self->_after_test( $aggregate, $job, $parser );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:518:     my ( $self, $aggregate, $job, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:520:     $self->_make_callback( 'after_test', $job->as_array_ref, $parser );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:93:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:94:     return [ $self->filename, $self->description, $self->{context} ||= [] ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:82: sub filename    { shift->{filename} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:83: sub description { shift->{description} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:105:     my $self  = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:106:     my $event = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:108:     my $cb = $self->_callback_for($event);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:100:     my ( $self, $event ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:101:     return $self->{code_for}{$event};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Base.pm:109:     return unless defined $cb;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:521:     $aggregate->add( $job->description, $parser );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:83: sub description { shift->{description} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:118:     my ( $self, $description, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:119:     if ( exists $self->{parser_for}{$description} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:123:     push @{ $self->{parse_order} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:123:     push @{ $self->{parse_order} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:124:     $self->{parser_for}{$description} = $parser;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:126:     while ( my ( $summary, $method ) = each %SUMMARY_METHOD_FOR ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:135:             $self->{$summary} += $count;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1123: sub parse_errors { @{ shift->{parse_errors} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1123: sub parse_errors { @{ shift->{parse_errors} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:873: sub todo_passed { @{ shift->{todo_passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:873: sub todo_passed { @{ shift->{todo_passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1061: sub ignore_exit { shift->pragma( 'ignore_exit', @_ ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:920:     my ( $self, $pragma ) = splice @_, 0, 2;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:922:     return $self->{pragma}->{$pragma} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:135:             $self->{$summary} += $count;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:798: sub passed { @{ shift->{passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:798: sub passed { @{ shift->{passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:135:             $self->{$summary} += $count;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:135:             $self->{$summary} += $count;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:901: sub skipped { @{ shift->{skipped} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:901: sub skipped { @{ shift->{skipped} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1061: sub ignore_exit { shift->pragma( 'ignore_exit', @_ ) }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:920:     my ( $self, $pragma ) = splice @_, 0, 2;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:922:     return $self->{pragma}->{$pragma} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:135:             $self->{$summary} += $count;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:136:             push @{ $self->{"descriptions_for_$summary"} } => $description;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:131:           if ( $method eq 'exit' || $method eq 'wait' )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:134:         if ( my $count = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:858: sub todo { @{ shift->{todo} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:858: sub todo { @{ shift->{todo} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:140:     return $self;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:593:         $job->finish;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:68:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:69:     if ( my $cb = $self->{on_finish} ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler/Job.pm:70:         $cb->($self);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:259:                     $job->on_finish( sub { shift @$seq } );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:217:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:218:     $self->{count} ||= $self->get_all;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:195:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:196:     my @all  = $self->_gather( $self->{schedule} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:202:     my ( $self, $rule ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:203:     return unless defined $rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:204:     return $rule unless 'ARRAY' eq ref $rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:205:     return map { defined() ? $self->_gather($_) : () } map {@$_} @$rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:205:     return map { defined() ? $self->_gather($_) : () } map {@$_} @$rule;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:197:     $self->{count} = @all;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:198:     @all;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:219:     my @jobs = $self->_find_next_job( $self->{schedule} );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:243:     my ( $self, $rule ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:245:     my @queue = ();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:246:     my $index = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:247:     while ( $index < @$rule ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:248:         my $seq = $rule->[$index];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:251:         shift @$seq while @$seq && _is_empty( $seq->[0] );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:252:         if (@$seq) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:268:             splice @$rule, $index, 1;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:272:     for my $seq (@queue) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:278:     return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:220:     if (@jobs) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:225:     return TAP::Parser::Scheduler::Spinner->new
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Scheduler.pm:228:     return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:596:     return;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:673:     return;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:153:     $aggregate->stop();
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:214:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:215:     $self->{end_time} = Benchmark->new;
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:536: sub new { my @t = (mytime, times, @_ == 2 ? $_[1] : 0);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:449: sub mytime () { time }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:537: 	  print STDERR "new=@t\n" if $Debug;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:538: 	  bless \@t; }

>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:168:     $harness->formatter->summary($aggregate);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:113:                 my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:114:                 return $self->{$method} unless @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:268:     my ( $self, $aggregate, $interrupted ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:270:     return if $self->silent;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:102: sub silent       { shift->verbosity <= -3 }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:272:     my @t     = $aggregate->descriptions;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:193: sub descriptions { @{ shift->{parse_order} || [] } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:193: sub descriptions { @{ shift->{parse_order} || [] } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:273:     my $tests = \@t;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:275:     my $runtime = $aggregate->elapsed_timestr;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:245:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:247:     my $elapsed = $self->elapsed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:228:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:230:     require Carp;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:231:     Carp::croak
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:234:     return timediff( $self->{end_time}, $self->{start_time} );
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:552:     my($a, $b) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:554:     die usage unless ref $a and ref $b;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:556:     my @r;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:559:     }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:557:     for (my $i=0; $i < @$a; ++$i) {

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:558: 	push(@r, $a->[$i] - $b->[$i]);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:558: 	push(@r, $a->[$i] - $b->[$i]);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:558: 	push(@r, $a->[$i] - $b->[$i]);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:558: 	push(@r, $a->[$i] - $b->[$i]);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:558: 	push(@r, $a->[$i] - $b->[$i]);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:558: 	push(@r, $a->[$i] - $b->[$i]);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:562:     bless \@r;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:249:     return timestr($elapsed);
>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:587:     my($tr, $style, $f) = @_;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:589:     die usage unless ref $tr;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:591:     my @t = @$tr;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:592:     warn "bad time value (@t)" unless @t==6;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:593:     my($r, $pu, $ps, $cu, $cs, $n) = @t;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:594:     my($pt, $ct, $tt) = ($tr->cpu_p, $tr->cpu_c, $tr->cpu_a);

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:540: sub cpu_p { my($r,$pu,$ps,$cu,$cs) = @{$_[0]}; $pu+$ps         ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:540: sub cpu_p { my($r,$pu,$ps,$cu,$cs) = @{$_[0]}; $pu+$ps         ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:540: sub cpu_p { my($r,$pu,$ps,$cu,$cs) = @{$_[0]}; $pu+$ps         ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:541: sub cpu_c { my($r,$pu,$ps,$cu,$cs) = @{$_[0]};         $cu+$cs ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:541: sub cpu_c { my($r,$pu,$ps,$cu,$cs) = @{$_[0]};         $cu+$cs ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:541: sub cpu_c { my($r,$pu,$ps,$cu,$cs) = @{$_[0]};         $cu+$cs ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:542: sub cpu_a { my($r,$pu,$ps,$cu,$cs) = @{$_[0]}; $pu+$ps+$cu+$cs ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:542: sub cpu_a { my($r,$pu,$ps,$cu,$cs) = @{$_[0]}; $pu+$ps+$cu+$cs ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:542: sub cpu_a { my($r,$pu,$ps,$cu,$cs) = @{$_[0]}; $pu+$ps+$cu+$cs ; }

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:595:     $f = $Default_Format unless defined $f;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:597:     $style ||= $Default_Style;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:598:     return '' if $style eq 'none';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:599:     $style = ($ct>0) ? 'all' : 'noc' if $style eq 'auto';

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:600:     my $s = "@t $style"; # default for unknown style

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:601:     my $w = $hirestime ? "%2g" : "%2d";

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:602:     $s = sprintf("$w wallclock secs (%$f usr %$f sys + %$f cusr %$f csys = %$f CPU)",

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:604:     $s = sprintf("$w wallclock secs (%$f usr + %$f sys = %$f CPU)",

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:606:     $s = sprintf("$w wallclock secs (%$f cusr + %$f csys = %$f CPU)",

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:608:     my $elapsed = do {

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:609: 	if ($style eq 'nop') {$cu+$cs}

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:609: 	if ($style eq 'nop') {$cu+$cs}

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:613:     $s .= sprintf(" @ %$f/s (n=$n)",$n/($elapsed)) if $n && $elapsed;

>> C:/CPANTesters/Perl5.12.4/lib/Benchmark.pm:614:     $s;

>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:277:     my $total  = $aggregate->total;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:339: sub total { shift->{total} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:278:     my $passed = $aggregate->passed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:81:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:83:               ? @{ $self->{"descriptions_for_$method"} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:280:     if ( $self->timer ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:284:     $self->_failure_output("Test run interrupted!\n")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:290:     if ( $aggregate->all_passed ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:259:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:261:          $self->total
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:339: sub total { shift->{total} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:339: sub total { shift->{total} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:81:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:83:               ? @{ $self->{"descriptions_for_$method"} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:295:     if ( $total != $passed or $aggregate->has_problems ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:296:         $self->_output("\nTest Summary Report");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};

Test Summary Report>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:297:         $self->_output("\n-------------------\n");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};

-------------------
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:298:         for my $test (@$tests) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:299:             $self->_printed_summary_header(0);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:300:             my ($parser) = $aggregate->parsers($test);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:165:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:166:     return $self->_get_parsers(@_) if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:176:     my ( $self, @descriptions ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:177:     my @parsers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:178:     for my $description (@descriptions) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:179:         $self->_croak("A parser for ($description) could not be found")
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:181:         push @parsers => $self->{parser_for}{$description};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:183:     return wantarray ? @parsers : \@parsers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:301:             $self->_output_summary_failure(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:353:     my ( $self, $method, $name, $test, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:356:     my $output = $method eq 'failed' ? '_failure_output' : '_output';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:358:     if ( my @r = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:359:         $self->_summary_test_header( $test, $parser );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:373:     my ( $self, $test, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:374:     return if $self->_printed_summary_header;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:375:     my $spaces = ' ' x ( $self->_longest - length $test );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:376:     $spaces = ' ' unless $spaces;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:377:     my $output = $self->_get_output_method($parser);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:450:     my ( $self, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:451:     return $parser->has_problems ? '_failure_output' : '_output';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1019:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1021:          $self->failed
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:378:     $self->$output(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:392:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:394:     $self->_output(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
t/02parse-191.t (Wstat: 256 Tests: 1 Failed: 1)
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:382:     $self->_printed_summary_header(1);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:360:         my ( $singular, $plural )
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:362:         $self->$output( @r == 1 ? $singular : $plural );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:392:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:394:     $self->_output(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
  Failed test:  >> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:363:         my @results = $self->_balanced_range( 40, @r );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:398:     my ( $self, $limit, @range ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:399:     @range = $self->_range(@range);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:424:     my ( $self, @numbers ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:427:     @numbers = sort { $a <=> $b } @numbers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:428:     my ( $min, @range );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:430:     for my $i ( 0 .. $#numbers ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:431:         my $num  = $numbers[$i];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:432:         my $next = $numbers[ $i + 1 ];
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:433:         if ( defined $next && $next == $num + 1 ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:443:             push @range => $num;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:446:     return @range;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:400:     my $line = "";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:401:     my @lines;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:402:     my $curr = 0;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:403:     while (@range) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:404:         if ( $curr < $limit ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:405:             my $range = ( shift @range ) . ", ";
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:406:             $line .= $range;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:407:             $curr += length $range;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:416:     if ($line) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:417:         $line =~ s/, $//;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:418:         push @lines => $line;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:420:     return @lines;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:364:         $self->$output( sprintf "%s\n" => shift @results );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:392:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:394:     $self->_output(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
1
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:365:         my $spaces = ' ' x 16;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:366:         while (@results) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:306:             $self->_output_summary_failure(
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:353:     my ( $self, $method, $name, $test, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:356:     my $output = $method eq 'failed' ? '_failure_output' : '_output';
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:358:     if ( my @r = $parser->$method() ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:873: sub todo_passed { @{ shift->{todo_passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:873: sub todo_passed { @{ shift->{todo_passed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:314:             if ( my $exit = $parser->exit ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:315:                 $self->_summary_test_header( $test, $parser );
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:373:     my ( $self, $test, $parser ) = @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:374:     return if $self->_printed_summary_header;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:316:                 $self->_failure_output("  Non-zero exit status: $exit\n");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:392:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:394:     $self->_output(@_);
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
  Non-zero exit status: 1
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:323:             if ( my @errors = $parser->parse_errors ) {
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1123: sub parse_errors { @{ shift->{parse_errors} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1123: sub parse_errors { @{ shift->{parse_errors} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:346:     my $files = @$tests;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:347:     $self->_output("Files=$files, Tests=$total, $runtime\n");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
Files=1, Tests=1,  8 wallclock secs ( 0.33 usr +  0.06 sys =  0.39 CPU)
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:348:     my $status = $aggregate->get_status;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:275:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:277:     my $total  = $self->total;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:339: sub total { shift->{total} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:278:     my $passed = $self->passed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:81:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:83:               ? @{ $self->{"descriptions_for_$method"} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:281:         ( $self->has_errors || $total != $passed ) ? 'FAIL'
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:383:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:385:          $self->failed
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:81:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:83:               ? @{ $self->{"descriptions_for_$method"} }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:349:     $self->_output("Result: $status\n");
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:386:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Formatter/Base.pm:388:     print { $self->stdout } @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:150:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:151:             $self->{$method_name} = shift if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Object.pm:152:             return $self->{$method_name};
Result: FAIL
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:170:     my $total  = $aggregate->total;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:339: sub total { shift->{total} }
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:171:     my $passed = $aggregate->passed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:81:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:83:               ? @{ $self->{"descriptions_for_$method"} }
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:172:     my $failed = $aggregate->failed;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:81:             my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:83:               ? @{ $self->{"descriptions_for_$method"} }
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:174:     my @parsers = $aggregate->parsers;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:165:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:166:     return $self->_get_parsers(@_) if @_;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:167:     my $descriptions = $self->{parse_order};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:168:     my @parsers      = @{ $self->{parser_for} }{@$descriptions};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:168:     my @parsers      = @{ $self->{parser_for} }{@$descriptions};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser/Aggregator.pm:172:     return @parsers;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:176:     my $num_bad = 0;
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:177:     for my $parser (@parsers) {
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:178:         $num_bad++ if $parser->has_problems;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1019:     my $self = shift;
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:1021:          $self->failed
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:810: sub failed { @{ shift->{failed} } }
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:181:     die(sprintf(
Failed 1/1 test programs. 1/1 subtests failed.
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Parser.pm:41:     delete $ENV{TAP_VERSION};
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:66:     delete $ENV{HARNESS_ACTIVE};
>> C:/CPANTesters/Perl5.12.4/lib/Test/Harness.pm:67:     delete $ENV{HARNESS_VERSION};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:34:     delete $ENV{HARNESS_ACTIVE};
>> C:/CPANTesters/Perl5.12.4/lib/TAP/Harness.pm:35:     delete $ENV{HARNESS_VERSION};
